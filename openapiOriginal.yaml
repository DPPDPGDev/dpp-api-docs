openapi: 3.0.1
info:
  title: DebtPayPro API
  contact:
    email: apisupport@debtpaypro.com
  version: 1.0.0
servers:
  - url: https://api.debtpaypro.com/v1
security:
  - Api-Key: []
tags:
  - name: Calls
    description: all actions with calls
  - name: Contacts
    description: all actions with contacts
paths:
  /portal/domains:
    get:
      tags:
        - Portal
      summary: Get Portal Domains
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                type: object
  /portal/domain/{domain_id}:
    put:
      tags:
        - Portal
      summary: Update Portal Domain by Id
      parameters:
        - name: id
          in: path
          description: Id of portal domain to be updated
          required: true
          schema:
            type: integer
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                type: object
  /portal/company/{domain_id}:
    get:
      tags:
        - Portal
      summary: Get Company by Portal Domain Id
      parameters:
        - name: id
          in: path
          description: Id of Portal Domain to be read
          required: true
          schema:
            type: integer
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                type: object
    post:
      tags:
        - Portal
      summary: Create Company for the Portal Domain Id
      parameters:
        - name: id
          in: path
          description: Id of Portal Domain for the Company
          required: true
          schema:
            type: integer
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                type: object
    delete:
      tags:
        - Portal
      summary: Delete Company for the Portal Domain Id
      parameters:
        - name: id
          in: path
          description: Id of Portal Domain for the Company
          required: true
          schema:
            type: integer
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                type: object
  /portal/company/module/{domain_id}:
    get:
      tags:
        - Portal
      summary: Get Company Module by Portal Domain Id
      parameters:
        - name: id
          in: path
          description: Id of Portal Domain to be read
          required: true
          schema:
            type: integer
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                type: object
    put:
      tags:
        - Portal
      summary: Update Company Module by Portal Domain Id
      parameters:
        - name: id
          in: path
          description: Id of Portal Domain to be updated
          required: true
          schema:
            type: integer
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                type: object
  /portal/company/email/{domain_id}:
    get:
      tags:
        - Portal
      summary: Get Company Email by Portal Domain Id
      parameters:
        - name: id
          in: path
          description: Id of Portal Domain to be read
          required: true
          schema:
            type: integer
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                type: object
    put:
      tags:
        - Portal
      summary: Update Company Email by Portal Domain Id
      parameters:
        - name: id
          in: path
          description: Id of Portal Domain to be updated
          required: true
          schema:
            type: integer
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                type: object
  /portal/company/permission/{domain_id}:
    put:
      tags:
        - Portal
      summary: Update Company Permission by Portal Domain Id
      parameters:
        - name: id
          in: path
          description: Id of Portal Domain to be updated
          required: true
          schema:
            type: integer
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                type: object
  /portal/company/support/{domain_id}:
    put:
      tags:
        - Portal
      summary: Update Company Support by Portal Domain Id
      parameters:
        - name: id
          in: path
          description: Id of Portal Domain to be updated
          required: true
          schema:
            type: integer
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                type: object
  /portal/company/terminology/{domain_id}:
    put:
      tags:
        - Portal
      summary: Update Company Terminology by Portal Domain Id
      parameters:
        - name: id
          in: path
          description: Id of Portal Domain to be updated
          required: true
          schema:
            type: integer
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                type: object
  /accounts:
    post:
      tags:
        - Accounts
      summary: Create account record
      operationId: accountCreate
      requestBody:
        description: accountData
        content:
          application/json: {}
        required: true
      responses:
        success:
          description: after creation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 123
      x-codegen-request-body-name: body
  /accounts/{id}:
    get:
      tags:
        - Accounts
      summary: Get account record by id
      operationId: accountRead
      parameters:
        - name: id
          in: path
          description: Id of account to be returned
          required: true
          schema:
            type: integer
      responses:
        default:
          description: default
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    $ref: '#/components/schemas/Account'
    put:
      tags:
        - Accounts
      summary: Update account record by id
      operationId: accountUpdate
      parameters:
        - name: id
          in: path
          description: Id of account to be updated
          required: true
          schema:
            type: integer
      responses:
        default:
          description: default
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    type: object
                    properties: {}
    delete:
      tags:
        - Accounts
      summary: Delete account record by id
      operationId: accountDelete
      parameters:
        - name: id
          in: path
          description: Id of account to be returned
          required: true
          schema:
            type: integer
      responses:
        default:
          description: default
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    type: object
                    properties: {}
  /auth/token:
    post:
      tags:
        - Auth
      summary: get auth token
      operationId: authGetToken
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                client_secret:
                  type: string
                client_id:
                  type: string
      responses:
        default:
          description: default
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    type: array
                    description: get auth token
                    items:
                      type: object
                      properties:
                        api_key:
                          type: string
                          description: get auth token
                        expires_in:
                          type: integer
                          description: get auth token
  /calls:
    post:
      tags:
        - Calls
      summary: Create a new call record
      requestBody:
        description: Call object
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Call'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 123
        '404':
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: object
                    properties:
                      code:
                        type: integer
                        example: 404
                      message:
                        type: string
                        example: not found
      x-codegen-request-body-name: body
  /calls/{call_id}:
    get:
      tags:
        - Calls
      summary: Get call record by id
      parameters:
        - name: call_id
          in: path
          description: Id of call to be returned
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    $ref: '#/components/schemas/Call'
        '404':
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: object
                    properties:
                      code:
                        type: integer
                        example: 404
                      message:
                        type: string
                        example: not found
    put:
      tags:
        - Calls
      summary: Update call record by id
      parameters:
        - name: call_id
          in: path
          description: Id of call to be updated
          required: true
          schema:
            type: integer
      requestBody:
        description: Call object
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Call'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    type: object
                    properties: {}
        '404':
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: object
                    properties:
                      code:
                        type: integer
                        example: 404
                      message:
                        type: string
                        example: not found
      x-codegen-request-body-name: body
    delete:
      tags:
        - Calls
      summary: Delete call record by id
      parameters:
        - name: call_id
          in: path
          description: Id of call to be deleted
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    type: object
                    properties: {}
        '404':
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: object
                    properties:
                      code:
                        type: integer
                        example: 404
                      message:
                        type: string
                        example: not found
  /campaigns/e-mail:
    post:
      tags:
        - Campaigns
      summary: Create a new campaign email
      operationId: campaignCreate
      requestBody:
        description: Campaign object to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Campaign'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 123
        4xx:
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: object
                    properties:
                      code:
                        type: integer
                        example: 404
                      message:
                        type: string
                        example: not found
      x-codegen-request-body-name: body
  /campaigns/e-mail/{campaign_id}:
    get:
      tags:
        - Campaigns
      summary: Get campaign record by id
      operationId: campaignRead
      parameters:
        - name: campaign_id
          in: path
          description: Id of campaign email to be returned
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    $ref: '#/components/schemas/Campaign'
        4xx:
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: object
                    properties:
                      code:
                        type: integer
                        example: 404
                      message:
                        type: string
                        example: not found
    put:
      tags:
        - Campaigns
      summary: Update campaign record by id
      operationId: campaignUpdate
      parameters:
        - name: campaign_id
          in: path
          description: Id of campaign email to be updated
          required: true
          schema:
            type: integer
      requestBody:
        description: Campaign object that will be update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Campaign'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    type: object
                    properties: {}
        4xx:
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: object
                    properties:
                      code:
                        type: integer
                        example: 404
                      message:
                        type: string
                        example: not found
      x-codegen-request-body-name: body
    delete:
      tags:
        - Campaigns
      summary: Delete campaign record by id
      operationId: campaignDelete
      parameters:
        - name: campaign_id
          in: path
          description: Id of campaign email to be deleted
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    type: object
                    properties: {}
        4xx:
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: object
                    properties:
                      code:
                        type: integer
                        example: 404
                      message:
                        type: string
                        example: not found
  /companies:
    post:
      tags:
        - Companies
      summary: Create a new company record
      operationId: companyCreate
      requestBody:
        description: Company object to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Company'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 123
        4xx:
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: object
                    properties:
                      code:
                        type: integer
                        example: 404
                      message:
                        type: string
                        example: not found
      x-codegen-request-body-name: body
  /companies/{id}:
    get:
      tags:
        - Companies
      summary: Get company record by id
      operationId: companyRead
      parameters:
        - name: id
          in: path
          description: Id of company to be returned
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    $ref: '#/components/schemas/Company'
        4xx:
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: object
                    properties:
                      code:
                        type: integer
                        example: 404
                      message:
                        type: string
                        example: not found
    put:
      tags:
        - Companies
      summary: Update company record by id
      operationId: companyUpdate
      parameters:
        - name: id
          in: path
          description: Id of company to be updated
          required: true
          schema:
            type: integer
      requestBody:
        description: Company object that needs to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Company'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    type: object
                    properties: {}
        4xx:
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: object
                    properties:
                      code:
                        type: integer
                        example: 404
                      message:
                        type: string
                        example: not found
      x-codegen-request-body-name: body
    delete:
      tags:
        - Companies
      summary: Delete company record by id
      operationId: companyDelete
      parameters:
        - name: id
          in: path
          description: Id of company object to be deleted
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    type: object
                    properties: {}
        4xx:
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: object
                    properties:
                      code:
                        type: integer
                        example: 404
                      message:
                        type: string
                        example: not found
  /contacts/{client_id}:
    get:
      tags:
        - Contacts
      summary: Get contact record by id
      operationId: contactRead
      parameters:
        - name: client_id
          in: path
          description: Id of client to be returned
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    $ref: '#/components/schemas/Contact'
        4xx:
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: object
                    properties:
                      code:
                        type: integer
                        example: 404
                      message:
                        type: string
                        example: not found
    put:
      tags:
        - Contacts
      summary: Update contact record by id
      operationId: contactUpdate
      parameters:
        - name: client_id
          in: path
          description: Id of client to be updated
          required: true
          schema:
            type: integer
      requestBody:
        description: Contact object that will be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    type: object
                    properties: {}
        4xx:
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: object
                    properties:
                      code:
                        type: integer
                        example: 404
                      message:
                        type: string
                        example: not found
      x-codegen-request-body-name: body
    delete:
      tags:
        - Contacts
      summary: Delete contact record by id
      operationId: contactDelete
      parameters:
        - name: client_id
          in: path
          description: Id of contact object to be delete
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    type: object
                    properties: {}
        4xx:
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: object
                    properties:
                      code:
                        type: integer
                        example: 404
                      message:
                        type: string
                        example: not found
  /contacts/{contact_id}/documents:
    get:
      tags:
        - Contacts
      summary: Get Contact Documents
      description: Get enrollment statistics by contact id
      operationId: contactDocuments
      parameters:
        - name: contact_id
          in: path
          description: Id of contact
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    $ref: '#/components/schemas/Docs'
        4xx:
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: object
                    properties:
                      code:
                        type: integer
                        example: 404
                      message:
                        type: string
                        example: not found
  /contacts/getLists:
    post:
      tags:
        - Contacts
      summary: Get lists
      description: Get lists
      operationId: contactLists
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                contact_info:
                  type: integer
                  description: contact_info
                contact_id:
                  type: integer
                  description: contact_id
        required: false
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    type: object
                    properties: {}
        4xx:
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: object
                    properties:
                      code:
                        type: integer
                        example: 404
                      message:
                        type: string
                        example: not found
      x-codegen-request-body-name: body
  /contacts/{contact_id}/pull_credit/{provider}:
    post:
      tags:
        - Contacts
      summary: Pull Credit Report on a contact
      description: Pull credit report by contact id
      operationId: contactPullCredit
      parameters:
        - name: contact_id
          in: path
          description: contact_id
          required: true
          schema:
            type: integer
        - name: provider
          in: path
          description: provider
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    type: object
                    properties:
                      report_id:
                        type: integer
                        description: Pull Credit Report on a contact
                      message:
                        type: string
                        description: Pull Credit Report on a contact
                    description: Pull Credit Report on a contact
        4xx:
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: object
                    properties:
                      code:
                        type: integer
                        example: 404
                      message:
                        type: string
                        example: not found
  /contacts/{contact_id}/submit_to_lender/{lender}:
    post:
      tags:
        - Contacts
      summary: Submit contact to lender
      description: Submit contact to lender by contact id
      operationId: contactSubmitLender
      parameters:
        - name: contact_id
          in: path
          description: Id of contact to be submited
          required: true
          schema:
            type: integer
        - name: lender
          in: path
          description: Id of lender
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    type: object
                    properties: {}
        4xx:
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: object
                    properties:
                      code:
                        type: integer
                        example: 404
                      message:
                        type: string
                        example: not found
  /contacts/{contact_id}/ref:
    post:
      tags:
        - Contacts
      summary: change or update Account Contacts Ref
      description: Update account contacts ref
      operationId: contactRefUpdate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                contact_id:
                  type: integer
                  description: Id of contact to be updated
                type:
                  type: integer
                  description: type of contact
                authorized:
                  type: integer
                  description: contact authorized (1/0)
                link:
                  type: integer
                  description: link account contact
                unlink:
                  type: integer
                  description: unlink account contact
        required: false
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    type: object
                    properties: {}
        4xx:
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: object
                    properties:
                      code:
                        type: integer
                        example: 404
                      message:
                        type: string
                        example: not found
      x-codegen-request-body-name: body
  /contacts/list/download/{export_id}:
    get:
      tags:
        - Contacts
      summary: get status of the CSV file
      description: get status of csv file
      parameters:
        - name: export_id
          in: path
          description: export_id
          required: true
          schema:
            type: integer
      responses:
        '201':
          content:
            application/json:
              schema:
                type: object
        '400':
          content:
            application/json:
              schema:
                type: object
        4xx:
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: object
                    properties:
                      code:
                        type: integer
                        example: 404
                      message:
                        type: string
                        example: not found
  /contacts/list:
    post:
      tags:
        - Contacts
      summary: Create a job to make a CSV of the given list id.
      description: create CSV from list id
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                list_id:
                  type: integer
                  description: list_id
                email_on_ready:
                  type: string
                  description: email_on_ready
        required: false
      responses:
        '202':
          content:
            application/json:
              schema:
                type: object
        '400':
          content:
            application/json:
              schema:
                type: object
      x-codegen-request-body-name: body
  /contacts/{contact_id}/form_request:
    post:
      tags:
        - Contacts
      summary: Send Form to Contact Email by contact_id
      description: Send form to contact email by contact id
      parameters:
        - name: contact_id
          in: path
          description: Id of contact to be emailed
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                form_id:
                  type: integer
                  description: form_id
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    type: object
                    properties: {}
        4xx:
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: object
                    properties:
                      code:
                        type: integer
                        example: 404
                      message:
                        type: string
                        example: not found
      x-codegen-request-body-name: body
  /providers:
    get:
      tags:
        - Providers
      summary: Get Credit Report Providers
      operationId: providersAvailable
      responses:
        default:
          description: default
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    type: object
                    properties:
                      providers:
                        type: array
                        description: Get Credit Report Providers
                    description: Get Credit Report Providers
  /conditions/getDefinitions:
    post:
      tags:
        - Conditions
      summary: get definitions
      operationId: definitionsGet
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                objects:
                  type: object
                  properties: {}
                  description: objects
        required: false
      responses:
        default:
          description: default
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    type: array
                    description: get definitions
      x-codegen-request-body-name: body
  /debtqueues/{id}:
    get:
      tags:
        - DebtQueues
      summary: Get Debt Queue by Id
      operationId: debtqueuesGet
      parameters:
        - name: id
          in: path
          description: Id of debt queues
          required: true
          schema:
            type: integer
      responses:
        default:
          description: default
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    $ref: '#/components/schemas/DebtQueue'
        error:
          description: some error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: object
                    properties:
                      code:
                        type: integer
                        example: 404
                      message:
                        type: string
                        example: not found
    put:
      tags:
        - DebtQueues
      summary: Update Debt Queue by Id
      operationId: debtqueuesUpdate
      parameters:
        - name: id
          in: path
          description: Id of debt queues. If empty then insert new
          required: true
          schema:
            type: integer
            default: 0
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: title of debt queues
                description:
                  type: string
                  description: description of debt queues
        required: false
      responses:
        default:
          description: default
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    type: object
                    properties: {}
        error:
          description: some error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: object
                    properties:
                      code:
                        type: integer
                        example: 404
                      message:
                        type: string
                        example: not found
      x-codegen-request-body-name: body
  /debtqueues/company:
    get:
      tags:
        - DebtQueues
      summary: Get Debt Queues by Company
      operationId: debtqueuesByCompany
      responses:
        default:
          description: default
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    type: array
                    description: Get Debt Queues by Company
                    items:
                      $ref: '#/components/schemas/DebtQueue'
        error:
          description: some error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: object
                    properties:
                      code:
                        type: integer
                        example: 404
                      message:
                        type: string
                        example: not found
  /debts:
    post:
      tags:
        - Debts
      summary: Create a new debt record
      operationId: debtCreate
      requestBody:
        description: Debt object to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Debt'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 123
        4xx:
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: object
                    properties:
                      code:
                        type: integer
                        example: 404
                      message:
                        type: string
                        example: not found
      x-codegen-request-body-name: body
  /debts/{debt_id}:
    get:
      tags:
        - Debts
      summary: Get debt record by id
      operationId: debtRead
      parameters:
        - name: debt_id
          in: path
          description: Id of debt to be returned
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    $ref: '#/components/schemas/Debt'
        4xx:
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: object
                    properties:
                      code:
                        type: integer
                        example: 404
                      message:
                        type: string
                        example: not found
    put:
      tags:
        - Debts
      summary: Update debt record by id
      operationId: debtUpdate
      parameters:
        - name: debt_id
          in: path
          description: Id of debt to be updated
          required: true
          schema:
            type: integer
      requestBody:
        description: Debt object to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Debt'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    type: object
                    properties: {}
        4xx:
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: object
                    properties:
                      code:
                        type: integer
                        example: 404
                      message:
                        type: string
                        example: not found
      x-codegen-request-body-name: body
  /debts/{id}/notes:
    post:
      tags:
        - Debts
      summary: Save debt notes
      operationId: debtNotesSave
      parameters:
        - name: id
          in: path
          description: Id of debt
          required: true
          schema: {}
      requestBody:
        description: Notes object
        content:
          application/json:
            schema:
              type: object
              properties:
                notify_users:
                  type: array
                  description: notify users
                content:
                  type: string
                  description: notes
        required: false
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    type: object
                    properties: {}
        4xx:
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: object
                    properties:
                      code:
                        type: integer
                        example: 404
                      message:
                        type: string
                        example: not found
      x-codegen-request-body-name: body
  /debts/notes/{id}:
    delete:
      tags:
        - Debts
      summary: Delete debt notes
      operationId: debtNoteDelete
      parameters:
        - name: id
          in: path
          description: Id of debt
          required: true
          schema: {}
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    type: object
                    properties: {}
        4xx:
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: object
                    properties:
                      code:
                        type: integer
                        example: 404
                      message:
                        type: string
                        example: not found
  /debts/{id}/task:
    post:
      tags:
        - Debts
      summary: Add tasks by debt id
      operationId: debtTaskAdd
      parameters:
        - name: id
          in: path
          description: Id of debt
          required: true
          schema: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                assigned_to:
                  type: object
                  properties:
                    id:
                      type: integer
                      description: Add Debt Task
                    type:
                      type: string
                      description: Add Debt Task
                  description: Add Debt Task
                defined_task:
                  type: integer
                  description: Add Debt Task
                task_name:
                  type: string
                  description: Add Debt Task
        required: false
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    $ref: '#/components/schemas/DebtTask'
        4xx:
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: object
                    properties:
                      code:
                        type: integer
                        example: 404
                      message:
                        type: string
                        example: not found
      x-codegen-request-body-name: body
  /debts/getLists:
    post:
      tags:
        - Debts
      summary: Get lists
      operationId: debtListsGet
      requestBody:
        description: List object
        content:
          application/json:
            schema:
              type: object
              properties:
                debt_id:
                  type: integer
                  description: Get lists
                debt_info:
                  type: string
                  description: Get lists
        required: false
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    type: array
                    description: Get lists
        4xx:
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: object
                    properties:
                      code:
                        type: integer
                        example: 404
                      message:
                        type: string
                        example: not found
      x-codegen-request-body-name: body
  /documents:
    get:
      tags:
        - Documents
      summary: Get All Documents
      operationId: documentsGet
      parameters:
        - name: state
          in: query
          description: state
          schema:
            type: string
        - name: file_type
          in: query
          description: file type
          schema:
            type: string
      responses:
        default:
          description: default
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    type: array
                    description: Get All Documents
                    items:
                      $ref: '#/components/schemas/Document'
  /documents/template/{id}:
    get:
      tags:
        - Documents
      summary: get document`s template
      operationId: documentTemplateGet
      parameters:
        - name: id
          in: path
          description: Id of template to be returned
          required: true
          schema:
            type: integer
      responses:
        default:
          description: default
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    type: array
                    description: get document`s template
                    items:
                      $ref: '#/components/schemas/Document'
  /documents/{template_id}:
    post:
      tags:
        - Documents
      summary: Generate Document by Template Id
      operationId: documentGenerate
      parameters:
        - name: template_id
          in: path
          description: template_id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                contact_id:
                  type: integer
                  description: contact_id
                debt_id:
                  type: integer
                  description: debt_id
                tags:
                  type: array
                  description: tags
                syndication_id:
                  type: integer
                  description: syndication_id
                order_id:
                  type: integer
                  description: order_id
                loan_id:
                  type: integer
                  description: loan_id
        required: false
      responses:
        default:
          description: default
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    type: object
                    properties:
                      html:
                        type: string
                        description: Generate Document by Template Id
                      doc_id:
                        type: integer
                        description: Generate Document by Template Id
                      doc_data:
                        type: string
                        description: Generate Document by Template Id
                    description: Generate Document by Template Id
      x-codegen-request-body-name: body
  /documents/document-types:
    get:
      tags:
        - Documents
      summary: Get All Document Types
      operationId: documentTypesGet
      responses:
        default:
          description: default
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    type: array
                    description: Get All Document Types
                    items:
                      type: object
                      properties:
                        key:
                          type: integer
                          description: Get All Document Types
                        title:
                          type: string
                          description: Get All Document Types
  /documents/getfile:
    post:
      tags:
        - Documents
      summary: Get Document File
      operationId: documentFileGet
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                document_id:
                  type: integer
                  description: debt_id
                contact_id:
                  type: integer
                  description: contact_id
                file_type:
                  type: string
                  description: file_type
                guid:
                  type: string
                  description: guid
        required: false
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
                format: binary
      x-codegen-request-body-name: body
  /documents/htmltopdf:
    post:
      tags:
        - Documents
      summary: Convert HTML to PDF
      requestBody:
        description: HTML files to be converted
        content:
          application/json:
            schema:
              type: object
              properties:
                contact_id:
                  type: integer
                  description: Convert HTML to PDF
                files:
                  type: array
                  description: Convert HTML to PDF
                  items:
                    type: object
                    properties:
                      title:
                        type: string
                        description: Convert HTML to PDF
                      header:
                        type: string
                        description: Convert HTML to PDF
                      body:
                        type: string
                        description: Convert HTML to PDF
                      footer:
                        type: string
                        description: Convert HTML to PDF
        required: true
      responses:
        default:
          description: default
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    type: array
                    description: Convert HTML to PDF
                    items:
                      type: object
                      properties:
                        title:
                          type: string
                          description: Convert HTML to PDF
                        body:
                          type: string
                          description: Convert HTML to PDF
        error:
          description: some error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: object
                    properties:
                      code:
                        type: integer
                        example: 404
                      message:
                        type: string
                        example: not found
      x-codegen-request-body-name: body
  /importcsv:
    post:
      tags:
        - Import
      summary: Import CSV File
      operationId: CSVimport
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                map:
                  type: array
                  description: map
                object:
                  type: array
                  description: object
                csv:
                  type: file
                  description: csv
                  format: binary
        required: false
      responses:
        default:
          description: default
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    type: object
                    properties:
                      import_id:
                        type: integer
                        description: Import CSV File
                    description: Import CSV File
      x-codegen-request-body-name: body
  /validatecsv:
    post:
      tags:
        - Import
      summary: Validate CSV File
      operationId: CSVvalidate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                map:
                  type: array
                  description: map
                object:
                  type: array
                  description: object
                csv:
                  type: file
                  description: csv
                  format: binary
        required: false
      responses:
        default:
          description: default
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    type: object
                    properties:
                      import_id:
                        type: integer
                        description: Validate CSV File
                      bad_rows:
                        type: array
                        description: Validate CSV File
                      valid:
                        type: integer
                        description: Validate CSV File
                    description: Validate CSV File
      x-codegen-request-body-name: body
  /import/{import_id}/status:
    get:
      tags:
        - Import
      summary: Get Status of CSV Import
      operationId: CSVstatusGet
      parameters:
        - name: import_id
          in: path
          description: import_id
          required: true
          schema:
            type: integer
      responses:
        default:
          description: default
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    type: object
                    properties:
                      completed:
                        type: integer
                        description: Get Status of CSV Import
                      updates:
                        type: array
                        description: Get Status of CSV Import
                        items:
                          type: object
                          properties:
                            timestamp:
                              type: string
                              description: Get Status of CSV Import
                              format: date-time
                            message:
                              type: string
                              description: Get Status of CSV Import
                    description: Get Status of CSV Import
  /lenders:
    get:
      tags:
        - Lenders
      summary: Get Available Lenders
      operationId: lendersAvailableGet
      responses:
        default:
          description: default
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    type: object
                    properties:
                      lenders:
                        type: array
                        description: Get Available Lenders
                    description: Get Available Lenders
  /lenders/offer/{offer_id}:
    get:
      tags:
        - Lenders
      summary: Get Lender Offers by Id
      operationId: lenderLoanOfferGet
      parameters:
        - name: offer_id
          in: path
          description: Id of loan offer
          required: true
          schema:
            type: integer
      responses:
        default:
          description: default
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    $ref: '#/components/schemas/LoanOffer'
  /loans:
    post:
      tags:
        - Loans
      summary: Create a new loan record
      operationId: loanCreate
      requestBody:
        description: Loan object to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Loan'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 123
        4xx:
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: object
                    properties:
                      code:
                        type: integer
                        example: 404
                      message:
                        type: string
                        example: not found
      x-codegen-request-body-name: body
  /loans/{loan_id}:
    get:
      tags:
        - Loans
      summary: Get loan record by id
      operationId: loanRead
      parameters:
        - name: loan_id
          in: path
          description: Id of loan to be returned
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    $ref: '#/components/schemas/Loan'
        4xx:
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: object
                    properties:
                      code:
                        type: integer
                        example: 404
                      message:
                        type: string
                        example: not found
    put:
      tags:
        - Loans
      summary: Update loan record by id
      operationId: loanUpdate
      parameters:
        - name: loan_id
          in: path
          description: Id of loan to be updated
          required: true
          schema:
            type: integer
      requestBody:
        description: Loan object to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Loan'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    type: object
                    properties: {}
        4xx:
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: object
                    properties:
                      code:
                        type: integer
                        example: 404
                      message:
                        type: string
                        example: not found
      x-codegen-request-body-name: body
    delete:
      tags:
        - Loans
      summary: Delete loan record by id
      operationId: loanDelete
      parameters:
        - name: loan_id
          in: path
          description: Id of loan to be deleted
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    type: object
                    properties: {}
        4xx:
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: object
                    properties:
                      code:
                        type: integer
                        example: 404
                      message:
                        type: string
                        example: not found
  /notes:
    post:
      tags:
        - Notes
      summary: Create a new note record
      operationId: noteCreate
      requestBody:
        description: Note Object to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 123
        4xx:
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: object
                    properties:
                      code:
                        type: integer
                        example: 404
                      message:
                        type: string
                        example: not found
      x-codegen-request-body-name: body
  /notes/{note_id}:
    get:
      tags:
        - Notes
      summary: Get note record by id
      operationId: noteRead
      parameters:
        - name: note_id
          in: path
          description: Id of note to be returned
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    $ref: '#/components/schemas/Note'
        4xx:
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: object
                    properties:
                      code:
                        type: integer
                        example: 404
                      message:
                        type: string
                        example: not found
    put:
      tags:
        - Notes
      summary: Update note record by id
      operationId: noteUpdate
      parameters:
        - name: note_id
          in: path
          description: Id of note to be updated
          required: true
          schema:
            type: integer
      requestBody:
        description: Note object to be update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    type: object
                    properties: {}
        4xx:
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: object
                    properties:
                      code:
                        type: integer
                        example: 404
                      message:
                        type: string
                        example: not found
      x-codegen-request-body-name: body
    delete:
      tags:
        - Notes
      summary: Delete note record by id
      operationId: noteDelete
      parameters:
        - name: note_id
          in: path
          description: Id of note to be deleted
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    type: object
                    properties: {}
        4xx:
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: object
                    properties:
                      code:
                        type: integer
                        example: 404
                      message:
                        type: string
                        example: not found
  /note_templates:
    get:
      tags:
        - Notes
      summary: get note templates
      description: Id of note to be deleted
      operationId: noteTemplates
      responses:
        default:
          description: default
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    type: array
                    description: get note templates
  /documents/packages:
    get:
      tags:
        - Packages
      summary: Get All Document Packages
      operationId: packagesRead
      responses:
        default:
          description: default
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    type: array
                    description: Get All Document Packages
                    items:
                      type: object
                      properties:
                        key:
                          type: integer
                          description: Get All Document Packages
                        title:
                          type: string
                          description: Get All Document Packages
    post:
      tags:
        - Packages
      summary: Create Document Package
      operationId: packageCreate
      requestBody:
        description: Package object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Package'
        required: true
      responses:
        default:
          description: default
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    $ref: '#/components/schemas/Contact'
      x-codegen-request-body-name: body
  /documents/package/{id}:
    get:
      tags:
        - Packages
      summary: Get Document Package By Id
      operationId: packageRead
      parameters:
        - name: id
          in: path
          description: package id
          required: true
          schema:
            type: integer
      responses:
        default:
          description: default
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    type: array
                    description: Get Document Package By Id
                    items:
                      type: object
                      properties:
                        key:
                          type: integer
                          description: Get Document Package By Id
                        title:
                          type: string
                          description: Get Document Package By Id
    post:
      tags:
        - Packages
      summary: Update Document Package By Id
      operationId: packageUpdate
      parameters:
        - name: id
          in: path
          description: Id of package to be Updated
          required: true
          schema:
            type: integer
      requestBody:
        description: Contact object
        content:
          application/json: {}
        required: true
      responses:
        default:
          description: default
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    $ref: '#/components/schemas/Contact'
      x-codegen-request-body-name: body
  /roles:
    get:
      tags:
        - Users
      summary: Get user roles
      operationId: rolesRead
      responses:
        default:
          description: default
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    type: array
                    description: Get user roles
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          description: Get user roles
                        name:
                          type: string
                          description: Get user roles
  /sendemail:
    post:
      tags:
        - Emails
      summary: Send Email
      operationId: emailSend
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                contact_to_id:
                  type: integer
                  description: contact_to_id
                fromemail:
                  type: string
                  description: fromemail
        required: false
      responses:
        default:
          description: default
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    type: object
                    properties: {}
        error:
          description: some error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: object
                    properties:
                      code:
                        type: integer
                        example: 404
                      message:
                        type: string
                        example: not found
      x-codegen-request-body-name: body
  /sendemail/getecontent:
    get:
      tags:
        - Emails
      summary: Get Sendmail Content
      operationId: emailContentGet
      responses:
        default:
          description: default
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    type: object
                    properties: {}
        error:
          description: some error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: object
                    properties:
                      code:
                        type: integer
                        example: 404
                      message:
                        type: string
                        example: not found
  /sendemail/getetemplates:
    get:
      tags:
        - Emails
      summary: Get Sendmail Templates
      operationId: emailTemplateGet
      responses:
        default:
          description: default
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    type: array
                    description: Get Sendmail Templates
                    items:
                      $ref: '#/components/schemas/Ecampaign'
  /settings/group/{group}/values:
    get:
      tags:
        - Settings
      summary: Get Settings Values by Group Id
      operationId: settingsGroupValues
      parameters:
        - name: group
          in: path
          description: Id of Group to be read
          required: true
          schema:
            type: integer
      responses:
        default:
          description: default
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    type: object
                    properties: {}
  /settings/values/{settings_key}:
    get:
      tags:
        - Settings
      summary: Get Settings Values by Settings Key
      operationId: settingsValues
      parameters:
        - name: settings_key
          in: path
          description: Key of Setting to be read
          required: true
          schema:
            type: string
      responses:
        default:
          description: default
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    type: object
                    properties: {}
  /settings/group/{group}/definitions:
    get:
      tags:
        - Settings
      summary: Get Group Definition by Group Id
      operationId: settingsGroupDefinitions
      parameters:
        - name: group
          in: path
          description: Id of Group to be read
          required: true
          schema:
            type: integer
      responses:
        default:
          description: default
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    type: object
                    properties: {}
  /settlement_offers:
    post:
      tags:
        - Settlement offers
      summary: Create a new settlement offer record
      operationId: settlementOfferCreate
      requestBody:
        description: Settlement Offer Object to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Settlementoffer'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 123
        4xx:
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: object
                    properties:
                      code:
                        type: integer
                        example: 404
                      message:
                        type: string
                        example: not found
      x-codegen-request-body-name: body
  /settlement_offers/{offer_id}:
    get:
      tags:
        - Settlement offers
      summary: Get settlement offer record by id
      operationId: settlementOfferRead
      parameters:
        - name: offer_id
          in: path
          description: Id of settlement offer to be returned
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    $ref: '#/components/schemas/Settlementoffer'
        4xx:
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: object
                    properties:
                      code:
                        type: integer
                        example: 404
                      message:
                        type: string
                        example: not found
    put:
      tags:
        - Settlement offers
      summary: Update settlement offer by id
      operationId: settlementOfferUpdate
      parameters:
        - name: offer_id
          in: path
          description: Id of settlement offer to be updated
          required: true
          schema:
            type: integer
      requestBody:
        description: Settlement offer object that will be update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Settlementoffer'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    type: object
                    properties: {}
        4xx:
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: object
                    properties:
                      code:
                        type: integer
                        example: 404
                      message:
                        type: string
                        example: not found
      x-codegen-request-body-name: body
    delete:
      tags:
        - Settlement offers
      summary: Delete settlement offer record by id
      operationId: settlementOfferDelete
      parameters:
        - name: offer_id
          in: path
          description: Id of settlement offer to be deleted
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    type: object
                    properties: {}
        4xx:
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: object
                    properties:
                      code:
                        type: integer
                        example: 404
                      message:
                        type: string
                        example: not found
  /settlements/{id}/contact:
    get:
      tags:
        - Settlements
      summary: Get the contact as defined within this settlement
      operationId: settlementsContactGet
      parameters:
        - name: id
          in: path
          description: Settlement ID
          required: true
          schema: {}
      responses:
        default:
          description: default
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    $ref: '#/components/schemas/Contact'
  /settlements/{id}/contacts:
    get:
      tags:
        - Settlements
      summary: Get the contacts as defined within this settlement
      operationId: settlementsContactsGet
      parameters:
        - name: id
          in: path
          description: Settlement ID
          required: true
          schema: {}
      responses:
        default:
          description: default
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    type: array
                    description: Get the contacts as defined within this settlement
                    items:
                      $ref: '#/components/schemas/Contact'
  /settlements/{id}/extended:
    get:
      tags:
        - Settlements
      summary: Get Extended Information by Settlements Id
      operationId: settlementsExtendedGet
      parameters:
        - name: id
          in: path
          description: Settlement ID
          required: true
          schema: {}
      responses:
        default:
          description: default
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    type: array
                    description: Get Extended Information by Settlements Id
                    items:
                      $ref: '#/components/schemas/Contact'
  /settlements/{id}/debt:
    get:
      tags:
        - Settlements
      summary: Get the debt as defined within this settlement
      operationId: settlementsDebtGet
      parameters:
        - name: id
          in: path
          description: Settlement ID
          required: true
          schema: {}
      responses:
        default:
          description: default
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    $ref: '#/components/schemas/Debt'
  /settlements/{id}/snapshot:
    get:
      tags:
        - Settlements
      summary: Get snapshot
      operationId: settlementsSnapshotGet
      parameters:
        - name: id
          in: path
          description: Settlement ID
          required: true
          schema: {}
      responses:
        default:
          description: default
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    type: object
                    properties: {}
  /settlements/{id}/assignments:
    get:
      tags:
        - Settlements
      summary: Get assignments
      operationId: settlementsAssignmentsGet
      parameters:
        - name: id
          in: path
          description: Settlement ID
          required: true
          schema: {}
      responses:
        default:
          description: default
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    type: array
                    description: Get assignments
                    items:
                      $ref: '#/components/schemas/CompanyAssignment'
  /settlements/{id}/documents:
    get:
      tags:
        - Settlements
      summary: Get documents
      operationId: settlementsDocumentsGet
      parameters:
        - name: id
          in: path
          description: Settlement ID
          required: true
          schema: {}
      responses:
        default:
          description: default
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    type: array
                    description: Get documents
                    items:
                      $ref: '#/components/schemas/ContactsFile'
  /settlements/{id}:
    get:
      tags:
        - Settlements
      summary: Get settlement
      operationId: settlementGet
      parameters:
        - name: id
          in: path
          description: Settlement ID
          required: true
          schema: {}
      responses:
        default:
          description: default
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    $ref: '#/components/schemas/Settlementoffer'
  /settlements/settings:
    get:
      tags:
        - Settlements
      summary: get Settlements Setting
      operationId: settlementsSettings
      responses:
        default:
          description: default
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    type: array
                    description: get Settlements Setting
                    items:
                      $ref: '#/components/schemas/SettlementsSetting'
  /settlements/settings/getworkflow:
    post:
      tags:
        - Settlements
      summary: get Settlements settings workflow
      operationId: settlementsWorkflowGet
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                workflows:
                  type: array
                  description: workflows
                workflowtype:
                  type: string
                  description: workflowtype
                workflow_access:
                  type: array
                  description: workflow_access
        required: false
      responses:
        default:
          description: default
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    type: object
                    properties: {}
      x-codegen-request-body-name: body
  /check_funds/mca:
    post:
      tags:
        - Supervest
      summary: check Funds
      operationId: fundingCheck
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                merchant:
                  type: array
                  description: merchant
                financials:
                  type: array
                  description: financials
                mca:
                  type: array
                  description: mca
        required: false
      responses:
        default:
          description: default
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    type: object
                    properties:
                      funding_id:
                        type: integer
                        description: check Funds
                      status:
                        type: string
                        description: check Funds
                      approved_amount:
                        type: number
                        description: check Funds
                      reasons:
                        type: string
                        description: check Funds
                    description: check Funds
      x-codegen-request-body-name: body
  /submit/mca:
    post:
      tags:
        - Supervest
      summary: submit Funds
      operationId: fundingSubmit
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                merchant:
                  type: array
                  description: merchant
                financials:
                  type: array
                  description: financials
                mca:
                  type: array
                  description: mca
        required: false
      responses:
        default:
          description: default
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    type: object
                    properties:
                      funding_id:
                        type: integer
                        description: submit Funds
                      status:
                        type: string
                        description: submit Funds
                      approved_amount:
                        type: number
                        description: submit Funds
                      reasons:
                        type: string
                        description: submit Funds
                    description: submit Funds
      x-codegen-request-body-name: body
  /funding/{id}/fund:
    post:
      tags:
        - Supervest
      summary: fund
      operationId: fundingFund
      parameters:
        - name: id
          in: path
          description: loan id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                contract_date:
                  type: string
                  description: contract_date
                funding_date:
                  type: string
                  description: funding_date
                contract_number:
                  type: string
                  description: contract_number
        required: false
      responses:
        default:
          description: default
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    type: object
                    properties:
                      funding_id:
                        type: integer
                        description: fund
                      status:
                        type: string
                        description: fund
                      funded_amount:
                        type: number
                        description: fund
                    description: fund
        error:
          description: some error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: object
                    properties:
                      code:
                        type: integer
                        example: 404
                      message:
                        type: string
                        example: not found
      x-codegen-request-body-name: body
  /funding/{id}/cancel:
    post:
      tags:
        - Supervest
      summary: cancel
      operationId: fundingCancel
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: loan id
                reason:
                  type: string
                  description: reason
        required: false
      responses:
        default:
          description: default
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    type: object
                    properties:
                      funding_id:
                        type: integer
                        description: cancel
                      status:
                        type: string
                        description: cancel
                    description: cancel
        error:
          description: some error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: object
                    properties:
                      code:
                        type: integer
                        example: 404
                      message:
                        type: string
                        example: not found
      x-codegen-request-body-name: body
  /lookups/ein/{EIN}:
    get:
      tags:
        - Lookups
      summary: Lookup Ein Code
      parameters:
        - name: EIN
          in: path
          description: EIN of contact for loans to be returned
          required: true
          schema:
            type: string
      responses:
        default:
          description: default
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    type: object
                    properties: {}
        error:
          description: some error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: object
                    properties:
                      code:
                        type: integer
                        example: 404
                      message:
                        type: string
                        example: not found
  /send-sms-code:
    get:
      tags:
        - Supervest
      summary: Send SMS Code
      operationId: oneTimeCode
      parameters:
        - name: number
          in: query
          description: phone number
          schema:
            type: string
      responses:
        default:
          description: default
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    type: object
                    properties:
                      otc:
                        type: string
                        description: Send SMS Code
                    description: Send SMS Code
  /tasks:
    post:
      tags:
        - Tasks
      summary: Create a new task record
      operationId: taskCreate
      requestBody:
        description: Task object to be create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 123
        4xx:
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: object
                    properties:
                      code:
                        type: integer
                        example: 404
                      message:
                        type: string
                        example: not found
      x-codegen-request-body-name: body
  /tasks/{task_id}:
    get:
      tags:
        - Tasks
      summary: Get task record by id
      operationId: taskRead
      parameters:
        - name: task_id
          in: path
          description: Id of task to be returned
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    $ref: '#/components/schemas/Task'
        4xx:
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: object
                    properties:
                      code:
                        type: integer
                        example: 404
                      message:
                        type: string
                        example: not found
    put:
      tags:
        - Tasks
      summary: Update task record by id
      operationId: taskUpdate
      parameters:
        - name: task_id
          in: path
          description: Id of task to be updated
          required: true
          schema:
            type: integer
      requestBody:
        description: Task object to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    type: object
                    properties: {}
        4xx:
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: object
                    properties:
                      code:
                        type: integer
                        example: 404
                      message:
                        type: string
                        example: not found
      x-codegen-request-body-name: body
    delete:
      tags:
        - Tasks
      summary: Delete task by id
      operationId: taskDelete
      parameters:
        - name: task_id
          in: path
          description: Id of task object to be deleted
          required: true
          schema: {}
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    type: object
                    properties: {}
        4xx:
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: object
                    properties:
                      code:
                        type: integer
                        example: 404
                      message:
                        type: string
                        example: not found
  /tasks/{task_id}/complete:
    put:
      tags:
        - Tasks
      summary: Mark task complete by id
      operationId: taskMarkComplete
      parameters:
        - name: task_id
          in: path
          description: Id of task
          required: true
          schema: {}
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    $ref: '#/components/schemas/Task'
        4xx:
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: object
                    properties:
                      code:
                        type: integer
                        example: 404
                      message:
                        type: string
                        example: not found
  /task_items:
    get:
      tags:
        - Tasks
      summary: Get task items
      operationId: taskItemsGet
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    type: array
                    description: get task items
                    items:
                      $ref: '#/components/schemas/TaskItem'
        4xx:
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: object
                    properties:
                      code:
                        type: integer
                        example: 404
                      message:
                        type: string
                        example: not found
  /teams:
    get:
      tags:
        - Teams
      summary: Get all teams
      operationId: teamsGet
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    type: array
                    description: Get All Teams
                    items:
                      type: object
                      properties:
                        team_id:
                          type: integer
                          description: Get All Teams
                        team_name:
                          type: string
                          description: Get All Teams
        4xx:
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: object
                    properties:
                      code:
                        type: integer
                        example: 404
                      message:
                        type: string
                        example: not found
    post:
      tags:
        - Teams
      summary: Create a new team record
      operationId: teamCreate
      requestBody:
        description: Team object to be create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Team'
        required: true
      x-codegen-request-body-name: body
  /teams/{team_id}:
    get:
      tags:
        - Teams
      summary: Get team record by id
      operationId: teamRead
      parameters:
        - name: team_id
          in: path
          description: Id of team to be returned
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
        4xx:
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: object
                    properties:
                      code:
                        type: integer
                        example: 404
                      message:
                        type: string
                        example: not found
    put:
      tags:
        - Teams
      summary: Update team record by id
      operationId: teamUpdate
      parameters:
        - name: team_id
          in: path
          description: Id of team to be updated
          required: true
          schema:
            type: integer
      requestBody:
        description: Team object to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Team'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    type: object
                    properties: {}
        4xx:
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: object
                    properties:
                      code:
                        type: integer
                        example: 404
                      message:
                        type: string
                        example: not found
      x-codegen-request-body-name: body
    delete:
      tags:
        - Teams
      summary: Delete team record by id
      operationId: teamDelete
      parameters:
        - name: team_id
          in: path
          description: Id of team to be deleted
          required: true
          schema: {}
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    type: object
                    properties: {}
        4xx:
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: object
                    properties:
                      code:
                        type: integer
                        example: 404
                      message:
                        type: string
                        example: not found
  /users:
    get:
      tags:
        - Users
      summary: Get all users in account
      operationId: usersGet
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    type: array
                    description: Get all users in account
                    items:
                      $ref: '#/components/schemas/User'
        4xx:
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: object
                    properties:
                      code:
                        type: integer
                        example: 404
                      message:
                        type: string
                        example: not found
    post:
      tags:
        - Users
      summary: Create a new user record
      operationId: userCreate
      requestBody:
        description: User object to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 123
        4xx:
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: object
                    properties:
                      code:
                        type: integer
                        example: 404
                      message:
                        type: string
                        example: not found
      x-codegen-request-body-name: body
  /users/{user_id}:
    get:
      tags:
        - Users
      summary: Get user record by id
      operationId: userRead
      parameters:
        - name: user_id
          in: path
          description: Id of user to be returned
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    $ref: '#/components/schemas/User'
        4xx:
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: object
                    properties:
                      code:
                        type: integer
                        example: 404
                      message:
                        type: string
                        example: not found
    put:
      tags:
        - Users
      summary: Update user record by id
      operationId: userUpdate
      parameters:
        - name: user_id
          in: path
          description: Id of user to be updated
          required: true
          schema:
            type: integer
      requestBody:
        description: User object to be update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    type: object
                    properties: {}
        4xx:
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: object
                    properties:
                      code:
                        type: integer
                        example: 404
                      message:
                        type: string
                        example: not found
      x-codegen-request-body-name: body
    delete:
      tags:
        - Users
      summary: Delete user record by id
      operationId: userDelete
      parameters:
        - name: user_id
          in: path
          description: Id of user to delete
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    type: object
                    properties: {}
        4xx:
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: object
                    properties:
                      code:
                        type: integer
                        example: 404
                      message:
                        type: string
                        example: not found
  /users/current:
    get:
      tags:
        - Users
      summary: Get current user record
      description: this request gets the current user
      operationId: userCurrent
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    $ref: '#/components/schemas/User'
        4xx:
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: object
                    properties:
                      code:
                        type: integer
                        example: 404
                      message:
                        type: string
                        example: not found
  /users/{id}/tasks:
    post:
      tags:
        - Users
      summary: Get task records for user
      description: this request gets the tasks for user
      operationId: userTasks
      parameters:
        - name: id
          in: path
          description: Id of user whose tasks to be returned
          required: true
          schema:
            type: integer
      requestBody:
        description: Id of user whose tasks to be returned
        content:
          application/json:
            schema:
              type: object
              properties:
                completed:
                  type: integer
                  description: Get task records for user
                start:
                  type: integer
                  description: Get task records for user
                limit:
                  type: integer
                  description: Get task records for user
        required: false
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    type: array
                    description: Get task records for user
                    items:
                      $ref: '#/components/schemas/Task'
        4xx:
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: object
                    properties:
                      code:
                        type: integer
                        example: 404
                      message:
                        type: string
                        example: not found
      x-codegen-request-body-name: body
  /users/{id}/events:
    post:
      tags:
        - Users
      summary: Get event records for user
      description: this request gets the events for user
      operationId: userEvents
      parameters:
        - name: id
          in: path
          description: Id of user whose events to be returned
          required: true
          schema:
            type: integer
      requestBody:
        description: this request gets the events for user
        content:
          application/json:
            schema:
              type: object
              properties:
                public:
                  type: integer
                  description: Get event records for user
                dismissed:
                  type: integer
                  description: Get event records for user
                start:
                  type: integer
                  description: Get event records for user
                limit:
                  type: integer
                  description: Get event records for user
        required: false
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    type: array
                    description: Get event records for user
                    items:
                      $ref: '#/components/schemas/CalEvent'
        4xx:
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: object
                    properties:
                      code:
                        type: integer
                        example: 404
                      message:
                        type: string
                        example: not found
      x-codegen-request-body-name: body
components:
  schemas:
    Status:
      type: object
      properties:
        code:
          type: integer
          example: 200
        message:
          type: string
      description: ''
    Stat:
      type: object
      properties:
        gateway:
          type: integer
        num_payments_made:
          type: integer
        total_num_payments:
          type: integer
        total_fees_paid:
          type: integer
        total_fees_owed:
          type: integer
        num_returns:
          type: integer
        num_fees_taken:
          type: integer
        total_num_fees:
          type: integer
        sum_of_cleared_payments:
          type: integer
        sum_of_payments:
          type: integer
      description: stat record
    Account:
      type: object
      properties:
        account_id:
          type: integer
        account_number:
          type: string
      description: account record
    CalEvent:
      type: object
      properties:
        id:
          type: integer
        acctID:
          type: integer
        created:
          type: string
          format: date-time
        created_by:
          type: integer
        modified:
          type: string
          format: date-time
        modified_by:
          type: integer
        assigned_to:
          type: integer
        contact_id:
          type: integer
        event_type:
          type: string
        title:
          type: string
        description:
          type: string
        location:
          type: string
        location_id:
          type: integer
        start_date:
          type: string
          format: date-time
        end_date:
          type: string
          format: date-time
        timezone:
          type: string
        utc_start:
          type: string
          format: date-time
        utc_end:
          type: string
          format: date-time
        allday:
          type: integer
        repeats:
          type: integer
        repeatswhen:
          type: string
        repeatends:
          type: string
        reminder:
          type: string
        notify_part:
          type: integer
        auto_dismiss:
          type: integer
        public:
          type: integer
        dismissed:
          type: integer
        dismissed_at:
          type: string
          format: date-time
        hidden:
          type: integer
        event_result:
          type: integer
        userfield1:
          type: string
        userfield2:
          type: string
        userfield3:
          type: string
      description: CalEvent record
    Call:
      type: object
      properties:
        call_id:
          title: Call ID
          type: integer
          example: 364778265
        acctID:
          title: Account ID
          type: integer
          example: 4490
        contactID:
          title: Contact ID
          type: integer
          example: 487800700
        userID:
          title: User ID
          type: integer
          example: 6260056
        activity_id:
          title: Activity ID
          type: integer
          example: 608125717
        sdate:
          title: Currrent Date
          type: string
          format: date
          example: 2021-09-02T00:00:00.000Z
        created_at:
          title: Call Date
          type: string
          format: date-time
        call_type:
          title: Call Type
          type: string
          example: Outgoing
        call_result:
          title: Call Result
          type: string
          example: Busy
        call_dis_id:
          title: Call ID
          type: integer
          example: 2
        notes:
          title: Call Notes
          type: string
          example: lorem ipsum
        status_change:
          title: Status Change
          type: integer
          example: 274158
        duration:
          title: Call Duration
          type: string
          format: time
          example: '00:01:15'
        event_id:
          title: Event ID
          type: integer
          example: 8179
        dialer_id:
          title: Dialer ID
          type: integer
          example: 2
        recording_id:
          title: Recording ID
          type: integer
          example: 3
    Campaign:
      type: object
      properties:
        campaign_id:
          title: Campaign ID
          type: integer
          example: 157666
        acctID:
          title: Account ID
          type: integer
          example: 4490
        company_id:
          title: Company ID
          type: integer
          example: 57244
        active:
          title: Active Indicator
          type: boolean
          example: false
        created_at:
          title: Created Date
          type: string
          format: date-time
        created_by:
          title: Created By
          type: integer
          example: 6382111
        token:
          title: Call Token
          type: string
          example: 765096bf-02ce-9a2f-5420-b8891c7dd74e
        title:
          title: Campaign Title
          type: string
          example: API Campaign Test Company
        start_date:
          title: Campaign Start Date
          type: string
          format: date
          example: 2021-11-01T00:00:00.000Z
        end_date:
          title: Campaign End Date
          type: string
          format: date
          example: 2021-11-21T00:00:00.000Z
        source_id:
          title: Source ID
          type: integer
          example: 3184
        cost:
          title: Campaign Cost
          type: number
          example: 1984.25
        cost_type:
          title: Cost Type
          type: integer
          example: 1
        priority:
          title: Priority
          type: integer
          example: 4
        external_id:
          title: External ID
          type: integer
          example: 12345
        media_type:
          title: Media Type
          type: integer
          example: 1
        purchase_amount:
          title: Purchase Amount
          type: number
          example: 37
        del:
          title: Del Indicator
          type: boolean
          example: false
        deltime:
          title: Del Time
          type: string
          format: date-time
        del_by:
          title: Del By
          type: integer
          example: 0
      description: Campaigns Email object
    Company:
      type: object
      properties:
        company_id:
          title: Company ID
          type: integer
          example: 58315
        acctID:
          title: Account ID
          type: integer
          example: 4490
        parent_id:
          title: Parent ID
          type: integer
          example: 56142
        company_type:
          title: Company Type
          type: integer
          example: 2
        created_at:
          title: Created Date
          type: string
          format: date-time
        created_by:
          title: Created By
          type: integer
          example: 6260056
        name:
          title: Company Name
          type: integer
        contactname:
          title: Contact Name
          type: string
          example: John Doe
        company_code:
          title: Company Code
          type: string
          example: DAQC
        address:
          title: Company Address 1
          type: string
          example: 100 Main St.
        address2:
          title: Company Address 2
          type: string
          example: Suite 2038
        city:
          title: Company City
          type: string
          example: Chicago
        state:
          title: Company State
          type: string
          example: IL
        zip:
          title: Company Zip Code
          type: string
          example: '60602'
        phone:
          title: Company Phone 1
          type: string
          example: 312-689-2888
        phone2:
          title: Company Phone 2
          type: string
          example: 312-689-2877
        fax:
          title: Company Fax
          type: string
          example: 312-689-2866
        email:
          title: Company Email
          type: string
          example: dpp@debtpaypro.com
        timezone:
          title: Company Timezone
          type: string
          example: US\/Pacific
        ein:
          title: Company EIN
          type: string
          example: 82-6299373
        esign:
          title: Esign Indicator
          type: boolean
          example: false
        domain:
          title: Company Domain
          type: string
          example: www.DPPapiQA.com
        gcs_account_num:
          title: GCS Account Number
          type: string
          example: ''
        gcs_policy_group_id:
          title: GCS Group ID
          type: string
          example: ''
        account_num:
          title: Account Number
          type: string
          example: ''
        routing_num:
          title: Routing Number
          type: string
          example: ''
        bank_name:
          title: Bank Name
          type: string
          example: Citibank
        account_type:
          title: Account Type
          type: string
          example: ''
        active:
          title: Active Indicator
          type: boolean
          example: false
        theme:
          title: Theme
          type: string
        logo_url:
          title: Logo URL
          type: string
          example: >-
            https:\/\/login.debtpaypro.com\/images\/client\/62eeef-dpp-logo-blue2.png
        additional1:
          title: Additional 1
          type: string
          example: add1
        additional2:
          title: Additional 2
          type: string
          example: add2
        additional3:
          title: Additional 3
          type: string
          example: add3
        additional4:
          title: Additional 4
          type: string
          example: add4
        additional5:
          title: Additional 5
          type: string
          example: add5
        additional6:
          title: Additional 6
          type: string
          example: add6
        account_exec:
          title: Account Executive
          type: integer
          example: 6515056
        docusign_acct:
          title: Docusign Account
          type: string
          example: Greg
        docusign_user:
          title: Docusign User
          type: string
          example: Greg
        docusign_pass:
          title: Docusign Passworn
          type: string
          example: '12345'
        enroll_charge:
          title: Enrollment Charge
          type: number
          example: 5.75
        charge_payee:
          title: Charge Payee
          type: integer
          example: 1
      example: 1
    Address:
      type: object
      properties:
        address1:
          title: Address 1
          type: string
        address2:
          title: Address 2
          type: string
        address3:
          title: Address 3
          type: string
        city:
          title: City
          type: string
        state:
          title: State
          type: string
        zip:
          title: Zip
          type: string
      description: address record
    Contact:
      type: object
      properties:
        client_id:
          title: Client ID
          type: integer
        acctID:
          title: Account ID
          type: integer
        company_id:
          title: Company ID
          type: integer
        file_type:
          title: File Type
          type: integer
        form_id:
          title: Form ID
          type: integer
        created:
          title: Created Date
          type: string
          format: date-time
        created_by:
          title: Created By
          type: integer
        assigned_to:
          title: Assigned To
          type: integer
        campaign_id:
          title: Campaign ID
          type: integer
        attorney:
          title: Attorney
          type: integer
        attorney_id:
          title: Attorney ID
          type: integer
        attorney_id2:
          title: Attorney ID 2
          type: integer
        first_name:
          title: First Name
          type: string
        middle_name:
          title: Middle Name
          type: string
        last_name:
          title: Last Name
          type: string
        salutation:
          title: Salutation
          type: string
        title:
          title: Title
          type: string
        phone_number:
          title: Phone Number
          type: string
        phone_extension:
          title: Phone Extension
          type: string
        cell_phone:
          title: Cell Phone
          type: string
        cell_extension:
          title: Cell Extension
          type: string
        work_phone:
          title: Work Phone
          type: string
        work_extension:
          title: Work Extension
          type: string
        address:
          $ref: '#/components/schemas/Address'
        email:
          title: Email
          type: string
        social_security_number:
          title: Social Security Number
          type: string
        date_of_birth:
          title: Birth Date
          type: string
          format: date
          example: 2021-06-28T00:00:00.000Z
        language:
          title: Language
          type: integer
        submitted:
          title: Submitted
          type: integer
        submitted_by:
          title: Submitted By
          type: integer
        submitted_at:
          title: Submitted Date
          type: string
          format: date-time
        approved_by2:
          title: Approved By 2
          type: integer
        approved_date2:
          title: Approved Date 2
          type: string
          format: date
          example: 2021-06-28T00:00:00.000Z
        rejected_by:
          title: Rejected By
          type: integer
        rejected_notes:
          title: Rejected Notes
          type: string
        paused_notes:
          title: Paused Notes
          type: string
        dropped_reason:
          title: Dropped Reason
          type: integer
        grad_date:
          title: Graduation Date
          type: string
          format: date
          example: 2021-06-28T00:00:00.000Z
        total_debt:
          title: Total Debt
          type: number
        welcome_sent:
          title: Welcome Sent
          type: string
          format: date-time
        paper_statements:
          title: Paper Statements
          type: integer
        paper_welcome:
          title: Paper Welcome
          type: integer
        gateway_id:
          title: Gateway ID
          type: integer
        gateway_approved_by:
          title: Gateway Apprived By
          type: integer
        gateway_hold:
          title: Gateway Hold
          type: integer
        gateway_hold_reason:
          title: Gateway Hold Reason
          type: integer
        gateway_hold_notes:
          title: Gateway Hold Notes
          type: string
        gateway_auth_received:
          title: Gateway Auth Received
          type: integer
        gateway_auth_file:
          title: Gateway Auth File
          type: string
        iscoapp:
          title: Is Coapp
          type: integer
        customs:
          title: Customs
          type: array
          items:
            type: object
            properties:
              field_id:
                title: Field ID
                type: integer
              value:
                title: Field Value
                type: string
              label:
                title: Field Label
                type: string
    Note:
      type: object
      properties:
        content:
          type: string
        note_created_date:
          type: string
        note_id:
          type: integer
        note_type:
          type: string
        title:
          type: string
      description: note record
    Creditor:
      type: object
      properties:
        creditor_id:
          type: integer
        acctID:
          type: integer
        tp_id:
          type: integer
        is_active:
          type: integer
        company_name:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        address:
          $ref: '#/components/schemas/Address'
        phone:
          type: string
      description: crediror record
    DebtQueue:
      type: object
      properties:
        queue_id:
          type: integer
        company_id:
          type: integer
        queue_name:
          type: string
        created_by:
          $ref: '#/components/schemas/User'
        created_at:
          type: string
          format: date-time
        active:
          type: integer
      description: DebtQueues record
    DebtNote:
      type: object
      properties:
        note_id:
          type: integer
        acctID:
          type: integer
          example: 4490
        note_created_date:
          type: string
        client_id:
          type: integer
        debt_id:
          type: integer
        title:
          type: string
        created_by:
          $ref: '#/components/schemas/User'
        content:
          type: string
      description: debt note record
    DebtTask:
      type: object
      properties:
        debt:
          $ref: '#/components/schemas/Debt'
        debt_task_id:
          type: integer
        task:
          $ref: '#/components/schemas/Task'
      description: debt task record
    Debt:
      type: object
      properties:
        debt_id:
          title: Debt ID
          type: integer
          example: 124507593
        acctID:
          title: Account ID
          type: integer
          example: 3863
        created_at:
          title: Created Date
          type: string
          format: date-time
        created_by:
          $ref: '#/components/schemas/User'
        modified_at:
          title: Modified Date
          type: string
          format: date-time
        modified_by:
          title: Modified By
          type: integer
          example: 4949471
        original_debt_amount:
          title: Original Debt Amount
          type: number
          example: 44444
        current_debt_amount:
          title: Current Debt Amount
          type: number
          example: 27010.5
        current_payment:
          title: Current Payment
          type: number
          example: 377
        current_rate:
          title: Current Rate
          type: number
          example: 0.15
        notes:
          title: Notes
          type: string
          example: Lorem Ipsum
        verified_debt_amount:
          title: Verified Debt Amount
          type: number
          example: 27010.5
        creditor:
          $ref: '#/components/schemas/Creditor'
        debt_buyer:
          title: Debt Buyer
          type: string
          example: '6033912'
        poa_sent_date:
          title: POA Sent Date
          type: string
          format: date
          example: 2021-06-28T00:00:00.000Z
        legal_account:
          title: Legal Account
          type: string
          example: 'No'
        last_payment_date:
          title: Last Payment Date
          type: string
          format: date
          example: 2021-06-28T00:00:00.000Z
        last_payment_amount:
          title: Last Payment Amount
          type: number
          example: 321.55
        opened_date:
          title: Opened Date
          type: string
          format: date
          example: 2021-06-28T00:00:00.000Z
        available_balance:
          title: Available Balance
          type: number
          example: 0
        enrolled:
          title: Enrolled Indicator
          type: boolean
          example: false
        enrolled_date:
          title: Enrolled Date
          type: string
          format: date
        debt_type:
          title: Debt Type
          type: integer
          example: 0
        debt_status:
          title: Debt Status
          type: string
          example: ''
        locked:
          title: Locked Indicator
          type: boolean
          example: false
        og_account_num:
          title: OG Account Number
          type: string
          example: '12345674446'
        creditor_account_num:
          title: Creditor Account Number
          type: string
          example: '6033912'
        settled:
          title: Settled
          type: integer
          example: 6033912
        settlement_id:
          title: Settlement ID
          type: integer
          example: 0
        client_id:
          title: Client ID
          type: integer
          example: 382760691
        settlement_offers:
          title: Settlement Offers
          type: array
          example: '27010.5'
        customs:
          title: Customs
          type: array
    Docs:
      type: object
      properties:
        clixsign:
          type: array
        esigns:
          type: array
        docusign:
          type: array
        uploads:
          type: array
        generated:
          type: array
      description: docs data
    ContactsFile:
      type: object
      properties:
        file_id:
          type: integer
        file_name:
          type: string
        doc_type:
          type: string
        created_by:
          $ref: '#/components/schemas/User'
        created_at:
          type: string
          format: date-time
        description:
          type: string
        refs:
          type: array
        download:
          type: string
      description: Contacts File record
    Document:
      type: object
      properties:
        id:
          type: integer
        file_types:
          $ref: '#/components/schemas/FileTypes'
        states:
          type: array
        title:
          type: string
        doc_type:
          type: string
        category:
          type: string
        created_at:
          type: string
          format: date-time
      description: Document data
    Package:
      type: object
      properties:
        id:
          type: integer
        file_types:
          $ref: '#/components/schemas/FileTypes'
        states:
          type: array
        name:
          type: string
        description:
          type: string
        contents:
          type: array
        created_at:
          type: string
          format: date-time
        created_by:
          type: integer
        modified_at:
          type: string
          format: date-time
        modified_by:
          type: integer
      description: Package data
    Template:
      type: object
      properties:
        name:
          type: string
        folder:
          type: string
        file:
          type: string
      description: template record
    Ecampaign:
      type: object
      properties:
        id:
          type: integer
        acctID:
          type: integer
        created_by:
          type: integer
        created_at:
          type: string
          format: date-time
        modified_by:
          type: integer
        modified_at:
          type: string
          format: date-time
        category_id:
          type: integer
        title:
          type: string
        subject:
          type: string
        body:
          type: string
        plainbody:
          type: string
        public:
          type: integer
      description: Ecampaign record
    FileTypes:
      type: object
      properties:
        General / Not Defined:
          type: string
        Software:
          type: string
        Success:
          type: string
        Debt Settlement:
          type: string
        Student Loans:
          type: string
        Business Loans:
          type: string
      description: Document data
    Loan:
      type: object
      properties:
        acctID:
          title: Account ID
          type: integer
        ach_on:
          title: ACH On
          type: integer
        ach_start_date:
          title: ACH Start Date
          type: string
          format: date
          example: 2021-06-28T00:00:00.000Z
        advance_date:
          title: Advance Date
          type: string
          format: date
          example: 2021-06-28T00:00:00.000Z
        advance_type:
          title: Advance Type
          type: string
          example: ACH
        client_id:
          title: Client ID
          type: integer
        conf_num:
          title: Confirmation Number
          type: string
        contract_date:
          title: Contract Date
          type: string
          format: date
          example: 2021-06-28T00:00:00.000Z
        contract_number:
          title: Contract Number
          type: string
          example: '265595'
        created_at:
          title: Created At
          type: string
          format: date-time
        created_by:
          title: Created By
          type: integer
        defaulted_date:
          title: Defaulted Date
          type: string
          format: date
          example: 2021-06-28T00:00:00.000Z
        fees:
          title: Fees
          type: number
        freq_int:
          title: Freq Int
          type: string
        frequency:
          title: Frequency
          type: string
          example: WD
        funded:
          title: Funded
          type: integer
        holdback_percent:
          title: Holdback Percent
          type: number
        lien_pos:
          title: Lien Pos
          type: integer
        loan_amount:
          title: Loan Amount
          type: number
        loan_class:
          title: Loan Class
          type: integer
        loan_id:
          title: Loan ID
          type: integer
        modified_at:
          title: Modified Date
          type: string
          format: date-time
        modified_by:
          title: Modified By
          type: integer
        offer_set:
          title: Offer Set
          type: integer
        paid_in_full_date:
          title: Paid In Full Date
          type: string
          format: date
          example: 2021-06-28T00:00:00.000Z
        payback_amount:
          title: Payback Amount
          type: number
        payback_period:
          title: Payback Period
          type: integer
        payment:
          title: Payment
          type: number
        period_amount:
          title: Period Amount
          type: number
        pricing_lock:
          title: Pricing Lock
          type: integer
        program_id:
          title: Program ID
          type: integer
        rate:
          title: Rate
          type: number
          example: 1.33
        status:
          title: Status
          type: integer
          example: 13
        tp_id:
          title: Tp ID
          type: integer
        type_id:
          title: Type ID
          type: integer
          example: 7
        underwriter_notes:
          title: Underwriter Notes
          type: string
    LoanOffer:
      type: object
      properties:
        id:
          type: integer
        created_at:
          type: string
          format: date-time
        created_by:
          type: integer
        status_id:
          type: integer
        loan_amount:
          type: number
        rate:
          type: number
        apr:
          type: integer
        term:
          type: number
        payment_amt:
          type: number
        payback_amt:
          type: number
        frequency:
          type: integer
        active:
          type: integer
        type:
          type: string
        label:
          type: string
        term_unit:
          type: string
        amortization:
          type: number
        amortization_unit:
          type: string
        amortization_method:
          type: string
        compounding:
          type: string
        initial_date:
          type: string
          format: date
          example: 2021-06-28T00:00:00.000Z
        first_payment_date:
          type: string
          format: date
          example: 2021-06-28T00:00:00.000Z
        last_payment_date:
          type: string
          format: date
          example: 2021-06-28T00:00:00.000Z
        increment_type:
          type: string
        increment_value:
          type: integer
      description: Loan offer record
    Settlementoffer:
      type: object
      properties:
        offer_id:
          title: Offer ID
          type: integer
          example: 4036117
        acctID:
          title: Account ID
          type: integer
          example: 3863
        contact_id:
          title: Contact ID
          type: integer
          example: 485599270
        creditor:
          $ref: '#/components/schemas/Creditor'
        debt_id:
          title: Debt ID
          type: integer
          example: 12345
        created_at:
          title: Created Date
          type: string
          format: date-time
        created_by:
          title: Created By
          type: integer
        modified_at:
          title: Modified Date
          type: string
          format: date-time
        modified_by:
          title: Modified By
          type: integer
        neg_id:
          title: Neg ID
          type: integer
        madeby:
          title: Made By
          type: string
          example: Negotiator
        offer_status:
          title: Offer Status
          type: object
          properties: {}
          example: 3
        offer_status_date:
          title: Offer Status Date
          type: string
          format: date
          example: 2022-03-07T00:00:00.000Z
        offer_valid_date:
          title: Offer Valid Date
          type: string
          format: date
          example: 2021-10-24T00:00:00.000Z
        settlement_type:
          title: Settlement Type
          type: integer
        debt_amount:
          title: Debt Amount
          type: number
          example: 0
        settlement_amount:
          title: Settlement Amount
          type: number
          example: 0
        settlement_fee:
          title: Settlement Fee
          type: number
          example: 0
        notes:
          title: Notes
          type: string
          example: Lorem Ipsum
        cred_cont_id:
          title: Cred Cont ID
          type: integer
          example: 0
        json:
          type: object
          properties: {}
    SettlementsSetting:
      type: object
      properties:
        settlements_setting_id:
          type: integer
          description: Class SettlementsSettingModel
        acctID:
          type: integer
          description: Class SettlementsSettingModel
        setting_key:
          type: string
          description: Class SettlementsSettingModel
        setting_val:
          type: string
          description: Class SettlementsSettingModel
      description: crediror record
    Task:
      type: object
      properties:
        task_id:
          title: Task ID
          type: integer
          example: 31316761
        acctID:
          title: Account ID
          type: integer
          example: 3863
        contact_id:
          title: Contact IDe
          type: integer
          example: 487800700
        task_created_date:
          title: Task Created Date
          type: string
          format: date-time
        task_name:
          title: Task Name
          type: string
          example: Test Task
        defined_task:
          title: Defined Task
          type: boolean
          example: false
        created_by:
          title: Created By
          type: integer
          example: 0
        task_due_date:
          title: Task Due Date
          type: string
          format: date
          example: 2021-12-17T00:00:00.000Z
        task_note:
          title: Task Note
          type: string
          example: Lorem Ipsum
        list_id:
          title: List ID
          type: integer
          example: 0
        team_id:
          title: Team ID
          type: integer
          example: 0
        task_completed:
          title: Task Completed
          type: integer
          example: 30
        task_completed_by:
          title: Task Completed By
          type: integer
          example: 0
        task_completed_date:
          title: Task Completed Date
          type: string
          format: date-time
        task_completion_percentage:
          title: Completion Percentage
          type: integer
          example: 50
        task_status:
          title: Task Status
          type: integer
          example: 0
        title:
          title: Task Title
          type: string
          example: to do
        assigned_to_id:
          title: Assigned To ID
          type: integer
          example: 487800700
        task_type:
          title: Task Type
          type: integer
          example: 1
        assigned_to:
          title: Assigned To
          type: string
          example: Mark
    TaskItem:
      type: object
      properties:
        task_category:
          title: Task Category
          type: integer
        items:
          title: Items
          type: array
          items:
            type: object
            properties:
              id:
                title: ID
                type: integer
              title:
                title: Title
                type: string
    Team:
      type: object
      properties:
        team_id:
          title: Team ID
          type: integer
          example: 20473
        acctID:
          title: Account ID
          type: integer
          example: 3863
        company_id:
          title: Company ID
          type: integer
          example: 42128
        name:
          title: Team Name
          type: string
          example: Test Team
    UserAssignment:
      type: object
      properties:
        user_assignment_id:
          type: integer
        contact_id:
          type: integer
        role_id:
          type: integer
        company_type_id:
          type: integer
        company_id:
          type: integer
        team_id:
          type: integer
        user_id:
          type: integer
    CompanyAssignment:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        assignment:
          type: string
    User:
      type: object
      properties:
        user_id:
          title: User ID
          type: integer
          example: 6033912
        acctID:
          title: Account ID
          type: integer
          example: 3863
        guid:
          title: Group ID
          type: string
          example: '1'
        company_id:
          title: Company ID
          type: integer
          example: 1
        parent_id:
          title: Parent ID
          type: integer
        user_type:
          title: User TypeD
          type: integer
          example: 1
        created:
          title: Created Date
          type: string
          format: date-time
        user_name:
          title: User Name
          type: string
          example: QAuser
        firstname:
          title: First Name
          type: string
          example: QA
        lastname:
          title: Last Name
          type: string
          example: Tester
        company:
          title: Company Name
          type: string
          example: Acme
        email:
          title: Company Email
          type: string
          example: mail@debtpaypro.com
        active:
          title: Active Indicator
          type: boolean
          example: false
        role:
          title: Role
          type: integer
          example: 29399
        attorney:
          title: Attorney Indicator
          type: boolean
          example: false
        payee_id:
          title: Payee ID
          type: integer
          example: 23006
        del:
          title: Del
          type: integer
          example: 0
        delTime:
          title: Delete Date
          type: string
          format: date-time
        pass_reset:
          title: Password Reset
          type: boolean
          example: false
        master:
          title: Master Indicator
          type: boolean
          example: false
        billable:
          title: Billable Indicator
          type: boolean
          example: false
  responses:
    ErrorResponse:
      description: Error Response
      content:
        application/json:
          schema:
            type: object
    create:
      description: after creation
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                $ref: '#/components/schemas/Status'
              response:
                type: object
                properties:
                  id:
                    type: integer
                    example: 123
    default:
      description: default
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                $ref: '#/components/schemas/Status'
              response:
                type: object
                properties: {}
    error:
      description: some error
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: object
                properties:
                  code:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: not found
    success:
      description: after creation
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                $ref: '#/components/schemas/Status'
              response:
                type: object
                properties:
                  id:
                    type: integer
                    example: 123
  parameters:
    id:
      name: id
      in: path
      description: Id of package to be generated
      required: true
      schema:
        type: integer
    campaign_id:
      name: campaign_id
      in: path
      description: Id of campaign SMS to be returned
      required: true
      schema:
        type: integer
  requestBodies:
    body:
      description: Contact object
      content:
        '*/*':
          schema:
            type: object
            properties:
              contact_id:
                type: integer
                description: >-
                  Generate Document Package By Id


                  SWG\Post(

                  path="/documents/packages/{id}", tags={"Packages"},
                  consumes={"application/json"},
      required: true
  securitySchemes:
    Api-Key:
      type: apiKey
      name: Api-Key
      in: header
