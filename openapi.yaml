openapi: 3.0.0
info:
  title: DebtPayPro API
  description: This is the DebtPayPro API
  version: 1.0.0
  contact:
    name: Support
    email: support@debtpaypro.com

servers:
  - url: https://api.debtpaypro.com/v1
    description: Production Server
  - description: Staging16
    url: https://staging16-api.debtpaypro.com/v1

tags:
  - name: Authentication
    description: Authentication
  - name: Auth
    description: All available actions for Auth
  - name: Calls
    description: All available actions for Calls
  - name: Campaigns
    description: All available actions for Campaigns
  - name: Companies
    description: All available actions for Companies
  - name: Contacts
    description: All available actions for Contacts
  - name: Debts
    description: All available actions for Debts
  - name: Loans
    description: All available actions for Loans
  - name: Notes
    description: All available actions for Notes
  - name: Packages
    description: All available actions for Packages
  - name: Settlement_Offers
    description: All available actions for Settlement Offers
  - name: Tasks
    description: All available actions for Tasks
  - name: Teams
    description: All available actions for Teams
  - name: Users
    description: All available actions for Users

paths:
  /calls:
    post:
      summary: Create a Call Record
      description: Allows a record to be created and logged for any call made to or by a client
      operationId: callCreate
      tags:
        - Calls
      parameters: []
      security:
        - Api-Key: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: models/Call.yaml
      responses:
        '200':
          description: Successfully created Call Record
          content:
            application/json:
              schema:
                properties:
                  status:
                    $ref: models/Status.yaml
                  response:
                    type: object
                type: object
        '400':
          description: Error
          content:
            application/json:
              schema:
                required:
                  - status
                properties:
                  status:
                    $ref: models/Status.yaml
  '/calls/{id}':
    get:
      tags:
        - Calls
      summary: Find a Call Record by ID
      description: Returns a single Call Record
      operationId: callRead
      parameters:
        - name: id
          in: path
          description: Id of Call Record to return
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successfully retrieved Call Record
          content:
            application/json:
              schema:
                $ref: models/Call.yaml
        '400':
          description: Error
          content:
            application/json:
              schema:
                required:
                  - status
                properties:
                  status:
                    $ref: models/Status.yaml
    put:
      tags:
        - Calls
      summary: Update a Call Record by ID
      description: Updates a single Call Record Object
      operationId: callUpdate
      parameters:
        - name: id
          in: path
          description: Id of Call Record to update
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successfully updated Call Record
          content:
            application/json:
              schema:
                $ref: models/Call.yaml
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: models/Status.yaml
      requestBody:
        content:
          application/json:
            schema:
              $ref: models/Call.yaml
          application/xml:
            schema:
              type: object
              properties: {}
          multipart/form-data:
            schema:
              type: object
              properties: {}
        description: Update Call Record object
        required: true
    delete:
      tags:
        - Calls
      summary: Delete Call Record by ID
      description: Deletes a single Call Record Object
      operationId: callDelete
      parameters:
        - name: id
          in: path
          description: Id of Call Record to be deleted
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                properties:
                  status:
                    $ref: models/Status.yaml
                  response:
                    type: object
                type: object
        '400':
          description: Error
          content:
            application/json:
              schema:
                required:
                  - status
                properties:
                  status:
                    $ref: models/Status.yaml
  /campaigns/e-mail:
    post:
      tags:
        - Campaigns
      summary: Create a Campaign Record
      description: Creates a new Campaign Record object
      operationId: campaignCreate
      requestBody:
        $ref: '#/components/requestBodies/Campaign'
      responses:
        '200':
          description: Successfully created Campaign Record
          content:
            application/json:
              schema:
                properties:
                  status:
                    $ref: models/Status.yaml
                  response:
                    type: object
                type: object
        '400':
          description: Error
          content:
            application/json:
              schema:
                required:
                  - status
                properties:
                  status:
                    $ref: models/Status.yaml
  '/campaigns/e-mail/{id}':
    get:
      tags:
        - Campaigns
      summary: Find a Campaign Record by ID
      description: Returns a single Campaign Record object
      operationId: campaignRead
      parameters:
        - name: id
          in: path
          description: Id of Campaign Record to return
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successfully retrieved Campaign Record
          content:
            application/json:
              schema:
                properties:
                  response:
                    $ref: models/Campaign.yaml
                type: object
        '400':
          description: Error
          content:
            application/json:
              schema:
                required:
                  - status
                properties:
                  status:
                    $ref: models/Status.yaml
    put:
      tags:
        - Campaigns
      summary: Update a Campaign Record by ID
      description: Updates a single Campaign Record object
      operationId: campaignUpdate
      parameters:
        - name: id
          in: path
          description: Id of Campaign Record to update
          required: true
          schema:
            type: integer
      requestBody:
        $ref: '#/components/requestBodies/Campaign'
      responses:
        '200':
          description: Successfully updated Campaign Record
          content:
            application/json:
              schema:
                properties:
                  response:
                    $ref: models/Campaign.yaml
                type: object
        '400':
          description: Error
          content:
            application/json:
              schema:
                required:
                  - status
                properties:
                  status:
                    $ref: models/Status.yaml
    delete:
      tags:
        - Campaigns
      summary: Delete a Campaign Record by ID
      description: Deletes a single Campaign Record object
      operationId: campaignDelete
      parameters:
        - name: id
          in: path
          description: Id of Campaign Record to delete
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successfully deleted Campaign Record
          content:
            application/json:
              schema:
                properties:
                  status:
                    $ref: models/Status.yaml
                  response:
                    type: object
                type: object
        '400':
          description: Error
          content:
            application/json:
              schema:
                required:
                  - status
                properties:
                  status:
                    $ref: models/Status.yaml
  /companies:
    post:
      tags:
        - Companies
      summary: Create a Company Record
      description: Create a new Company Record object
      operationId: companyCreate
      requestBody:
        $ref: '#/components/requestBodies/Company'
      responses:
        '200':
          description: Successfully created Company
          content:
            application/json:
              schema:
                properties:
                  status:
                    $ref: models/Status.yaml
                  response:
                    type: object
                type: object
        '400':
          description: Error
          content:
            application/json:
              schema:
                required:
                  - status
                properties:
                  status:
                    $ref: models/Status.yaml
  '/companies/{id}':
    get:
      tags:
        - Companies
      summary: Find a Company Record by ID
      description: Returns a single Company Record object
      operationId: companyRead
      parameters:
        - name: id
          in: path
          description: Id of Company to return
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                properties:
                  response:
                    $ref: models/Company.yaml
                type: object
        '400':
          description: Error
          content:
            application/json:
              schema:
                required:
                  - status
                properties:
                  status:
                    $ref: models/Status.yaml
    put:
      tags:
        - Companies
      summary: Update a Company Record by ID
      description: Update a single Company Record object
      operationId: companyUpdate
      parameters:
        - name: id
          in: path
          description: Id of Company Record to update
          required: true
          schema:
            type: integer
      requestBody:
        $ref: '#/components/requestBodies/Company'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                properties:
                  response:
                    $ref: models/Company.yaml
                type: object
        '400':
          description: Error
          content:
            application/json:
              schema:
                required:
                  - status
                properties:
                  status:
                    $ref: models/Status.yaml
    delete:
      tags:
        - Companies
      summary: Delete a Company Record by ID
      description: Deletes a single Company Record object
      operationId: companyDelete
      parameters:
        - name: id
          in: path
          description: Id of Company Object to delete
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                properties:
                  status:
                    $ref: models/Status.yaml
                  response:
                    type: object
                type: object
        '400':
          description: Error
          content:
            application/json:
              schema:
                required:
                  - status
                properties:
                  status:
                    $ref: models/Status.yaml
  /contacts:
    post:
      tags:
        - Contacts
      summary: Create a Contact Record
      description: Creates a new Contact Record object
      operationId: contactCreate
      requestBody:
        $ref: '#/components/requestBodies/Contact'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                properties:
                  status:
                    $ref: models/Status.yaml
                  response:
                    type: object
                type: object
        '400':
          description: Error
          content:
            application/json:
              schema:
                required:
                  - status
                properties:
                  status:
                    $ref: models/Status.yaml
  '/contacts/{id}':
    get:
      tags:
        - Contacts
      summary: Find a Contact Record by ID
      description: Returns a Contact Record object
      operationId: contactRead
      parameters:
        - name: id
          in: path
          description: Id of Client to return
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                properties:
                  response:
                    $ref: models/Contact.yaml
                type: object
        '400':
          description: Error
          content:
            application/json:
              schema:
                required:
                  - status
                properties:
                  status:
                    $ref: models/Status.yaml
    put:
      tags:
        - Contacts
      summary: Update a Contact Record by ID
      description: Updates a single Contact Record object
      operationId: contactUpdate
      parameters:
        - name: id
          in: path
          description: Id of Contact Record to update
          required: true
          schema:
            type: integer
      requestBody:
        $ref: '#/components/requestBodies/Contact'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                properties:
                  response:
                    $ref: models/Contact.yaml
                type: object
        '400':
          description: Error
          content:
            application/json:
              schema:
                required:
                  - status
                properties:
                  status:
                    $ref: models/Status.yaml
    delete:
      tags:
        - Contacts
      summary: Delete a Contact Record by ID
      description: Deletes a single Contact Record object
      operationId: contactDelete
      parameters:
        - name: id
          in: path
          description: Id of Contact Record to delete
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                properties:
                  status:
                    $ref: models/Status.yaml
                  response:
                    type: object
                type: object
        '400':
          description: Error
          content:
            application/json:
              schema:
                required:
                  - status
                properties:
                  status:
                    $ref: models/Status.yaml
  '/contacts/{id}/form_request':
    post:
      tags:
        - Contacts
      summary: Send Form to Contact Email by ID
      description: Sends a Form to a Contact Email Address by ContactID
      operationId: sendForm
      parameters:
        - name: id
          in: path
          description: Id of Contact Record to send Form to
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                form_id:
                  type: integer
              required:
                - form_id
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                properties:
                  status:
                    $ref: models/Status.yaml
                  response:
                    type: object
                type: object
        '400':
          description: Error
          content:
            application/json:
              schema:
                required:
                  - status
                properties:
                  status:
                    $ref: models/Status.yaml
  /auth/token:
    post:
      tags:
        - Auth
      summary: Get API Authorization Token
      description: Receive an API Authorization Token. The Token that is returned can be entered for any API Request that requires an *Api-Key*.
      operationId: authGetToken
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                client_secret:
                  type: string
                client_id:
                  type: string
              required:
                - client_secret
                - client_id
      security: []
      responses:
        default:
          description: default
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    type: array
                    description: Get API Authization Token
                    items:
                      type: object
                      properties:
                        api_key:
                          type: string
                          description: API Authorization Token
                        expires_in:
                          type: integer
                          description: Time Until Token Expires
  /debts:
    post:
      tags:
        - Debts
      summary: Create a Debt Record
      description: Creates a new Debt Record object
      operationId: debtCreate
      requestBody:
        $ref: '#/components/requestBodies/Debt'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                properties:
                  status:
                    $ref: models/Status.yaml
                  response:
                    type: object
                type: object
        '400':
          description: Error
          content:
            application/json:
              schema:
                required:
                  - status
                properties:
                  status:
                    $ref: models/Status.yaml
  '/debts/{id}':
    get:
      tags:
        - Debts
      summary: Find a Debt Record by ID
      description: Returns a single Debt Record
      operationId: debtRead
      parameters:
        - name: id
          in: path
          description: Id of Debt Record to return
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                properties:
                  response:
                    $ref: models/Debt.yaml
                type: object
        '400':
          description: error
          content:
            application/json:
              schema:
                required:
                  - status
                properties:
                  status:
                    $ref: models/Status.yaml
    put:
      tags:
        - Debts
      summary: Update a Debt Record by ID
      description: Updates a single Debt Record
      operationId: debtUpdate
      parameters:
        - name: id
          in: path
          description: Id of Debt Record to update
          required: true
          schema:
            type: integer
      requestBody:
        $ref: '#/components/requestBodies/Debt'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                properties:
                  response:
                    $ref: models/Debt.yaml
                type: object
        '400':
          description: Error
          content:
            application/json:
              schema:
                required:
                  - status
                properties:
                  status:
                    $ref: models/Status.yaml
    delete:
      tags:
        - Debts
      summary: Delete a Debt Record by ID
      description: Deletes a single Debt Record object
      operationId: debtDelete
      parameters:
        - name: id
          in: path
          description: Id of Debt Record to delete
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                properties:
                  status:
                    $ref: models/Status.yaml
                  response:
                    type: object
                type: object
        '400':
          description: Error
          content:
            application/json:
              schema:
                required:
                  - status
                properties:
                  status:
                    $ref: models/Status.yaml
  '/debts/{id}/notes':
    post:
      tags:
        - Debts
      summary: Create a Debt Note using DebtID
      description: Creates a new Debt Note object
      operationId: debtNoteCreate
      parameters:
        - in: path
          name: id
          description: Id of debtnote
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                notify_users:
                  type: object
                  description: notify users
                content:
                  description: notes
                  type: string
              type: object
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                properties:
                  status:
                    $ref: models/Status.yaml
                  response:
                    type: object
                type: object
        '400':
          description: Error
          content:
            application/json:
              schema:
                required:
                  - status
                properties:
                  status:
                    $ref: models/Status.yaml
  '/debts/notes/{id}':
    delete:
      tags:
        - Debts
      summary: Delete a Debt Note by ID
      description: Deletes a single Debt Note object
      operationId: debtNoteDelete
      parameters:
        - name: id
          in: path
          description: Id of debt
          required: true
          schema:
            type: integer
      responses:
        default:
          description: default
          content:
            application/json:
              schema:
                properties:
                  status:
                    $ref: models/Status.yaml
                  response:
                    type: object
                type: object
  /loans:
    post:
      tags:
        - Loans
      summary: Create a Loan Record
      description: Creates a new Loan Record object
      operationId: loanCreate
      requestBody:
        $ref: '#/components/requestBodies/Loan'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                properties:
                  status:
                    $ref: models/Status.yaml
                  response:
                    type: object
                type: object
        '400':
          description: Error
          content:
            application/json:
              schema:
                required:
                  - status
                properties:
                  status:
                    $ref: models/Status.yaml
  '/loans/{id}':
    get:
      tags:
        - Loans
      summary: Find a Loan Record by ID
      description: Returns a single Loan Record object
      operationId: loanRead
      parameters:
        - name: id
          in: path
          description: Id of Loan Record to return
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                properties:
                  response:
                    $ref: models/Loan.yaml
                type: object
        '400':
          description: Error
          content:
            application/json:
              schema:
                required:
                  - status
                properties:
                  status:
                    $ref: models/Status.yaml
    put:
      tags:
        - Loans
      summary: Update a Loan Record by ID
      description: Updates a single Loan Record object
      operationId: loanUpdate
      parameters:
        - name: id
          in: path
          description: Id of Loan Record to Update
          required: true
          schema:
            type: integer
      requestBody:
        $ref: '#/components/requestBodies/Loan'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                properties:
                  response:
                    $ref: models/Loan.yaml
                type: object
        '400':
          description: Error
          content:
            application/json:
              schema:
                required:
                  - status
                properties:
                  status:
                    $ref: models/Status.yaml
    delete:
      tags:
        - Loans
      summary: Delete a Loan Record by ID
      description: Deletes a single Loan Record object
      operationId: loanDelete
      parameters:
        - name: id
          in: path
          description: Id of Loan Record to Delete
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                properties:
                  status:
                    $ref: models/Status.yaml
                  response:
                    type: object
                type: object
        '400':
          description: Error
          content:
            application/json:
              schema:
                required:
                  - status
                properties:
                  status:
                    $ref: models/Status.yaml
  /settlement_offers:
    post:
      tags:
        - Settlement_Offers
      summary: Create a Settlement Offer Record
      description: Creates a new Settlement Offer object
      operationId: settlementOfferCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: models/Settlementoffer.yaml
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                properties:
                  status:
                    $ref: models/Status.yaml
                  response:
                    type: object
                type: object
        '400':
          description: Error
          content:
            application/json:
              schema:
                required:
                  - status
                properties:
                  status:
                    $ref: models/Status.yaml
  '/settlement_offers/{id}':
    get:
      tags:
        - Settlement_Offers
      summary: Find a Settlement Offer Record by ID
      description: Returns a single Settlement Offer object
      operationId: settlementOfferRead
      parameters:
        - name: id
          in: path
          description: Id of settlement offer to be returned
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: default
          content:
            application/json:
              schema:
                properties:
                  status:
                    $ref: models/Status.yaml
                  response:
                    $ref: models/Settlement.yaml
                type: object
        '400':
          description: Error
          content:
            application/json:
              schema:
                required:
                  - status
                properties:
                  status:
                    $ref: models/Status.yaml
    put:
      tags:
        - Settlement_Offers
      summary: Update a Settlement Offer Record by ID
      description: Updates a single Settlement Offer Record object
      operationId: settlementOfferUpdate
      parameters:
        - name: id
          in: path
          description: Id of settlement offer to be updated
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: models/Settlementoffer.yaml
        description: Settlement offer object that needs to be updated
        required: true
      responses:
        '200':
          description: default
          content:
            application/json:
              schema:
                properties:
                  status:
                    $ref: models/Status.yaml
                  response:
                    type: object
                type: object
        '400':
          description: Error
          content:
            application/json:
              schema:
                required:
                  - status
                properties:
                  status:
                    $ref: models/Status.yaml
    delete:
      tags:
        - Settlement_Offers
      summary: Delete a Settlement Offer Record by ID
      description: Deletes a single Settlement Offer object
      operationId: settlementOfferDelete
      parameters:
        - name: id
          in: path
          description: Id of settlement offer to be deleted
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: default
          content:
            application/json:
              schema:
                properties:
                  status:
                    $ref: models/Status.yaml
                  response:
                    type: object
                type: object
        '400':
          description: Error
          content:
            application/json:
              schema:
                required:
                  - status
                properties:
                  status:
                    $ref: models/Status.yaml
  /tasks:
    post:
      tags:
        - Tasks
      summary: Create a Task Record
      description: Creates a new Task Record object
      operationId: taskCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: models/Task.yaml
        description: Task object to be created
        required: true
      responses:
        '200':
          description: default
          content:
            application/json:
              schema:
                properties:
                  status:
                    $ref: models/Status.yaml
                  response:
                    properties:
                      id:
                        type: integer
                        example: 123
                    type: object
                type: object
        '400':
          description: Error
          content:
            application/json:
              schema:
                required:
                  - status
                properties:
                  status:
                    $ref: models/Status.yaml
  '/tasks/{id}':
    get:
      tags:
        - Tasks
      summary: Find a Task Record by ID
      description: Returns a single Task Record object
      operationId: taskRead
      parameters:
        - name: id
          in: path
          description: Id of task to be returned
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: default
          content:
            application/json:
              schema:
                properties:
                  status:
                    $ref: models/Status.yaml
                  response:
                    $ref: models/Task.yaml
                type: object
        '400':
          description: Error
          content:
            application/json:
              schema:
                required:
                  - status
                properties:
                  status:
                    $ref: models/Status.yaml
    put:
      tags:
        - Tasks
      summary: Update a Task Record by ID
      description: Updates a single Task Record object
      operationId: taskUpdate
      parameters:
        - name: id
          in: path
          description: Id of task to be updated
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: models/Task.yaml
        description: Task object that needs to be updated
        required: true
      responses:
        '200':
          description: default
          content:
            application/json:
              schema:
                properties:
                  status:
                    $ref: models/Status.yaml
                  response:
                    $ref: models/Task.yaml
                type: object
        '400':
          description: Error
          content:
            application/json:
              schema:
                required:
                  - status
                properties:
                  status:
                    $ref: models/Status.yaml
    delete:
      tags:
        - Tasks
      summary: Delete a Task Record by ID
      description: Deletes a single Task Record object
      operationId: taskDelete
      parameters:
        - name: id
          in: path
          description: Id of task object to be deleted
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                properties:
                  status:
                    $ref: models/Status.yaml
                  response:
                    type: object
                type: object
        '400':
          description: Error
          content:
            application/json:
              schema:
                required:
                  - status
                properties:
                  status:
                    $ref: models/Status.yaml
  /teams:
    get:
      tags:
        - Teams
      summary: Find All Existing Team Records
      description: Returns a List of Every Team Record object
      operationId: teamsGet
      responses:
        '200':
          description: default
          content:
            application/json:
              schema:
                properties:
                  status:
                    $ref: models/Status.yaml
                  response:
                    description: ''
                    type: array
                    items:
                      properties:
                        team_id:
                          description: ''
                          type: integer
                        team_name:
                          description: ''
                          type: string
                type: object
        '400':
          description: Error
          content:
            application/json:
              schema:
                required:
                  - status
                properties:
                  status:
                    $ref: models/Status.yaml
    post:
      tags:
        - Teams
      summary: Create a Team Record
      description: Creates a new Team Record Object
      operationId: teamCreate
      requestBody:
        $ref: '#/components/requestBodies/Team'
      responses:
        '200':
          description: after creation
          content:
            application/json:
              schema:
                properties:
                  status:
                    $ref: models/Status.yaml
                  response:
                    properties:
                      id:
                        type: integer
                        example: 123
                    type: object
                type: object
        '400':
          description: Error
          content:
            application/json:
              schema:
                required:
                  - status
                properties:
                  status:
                    $ref: models/Status.yaml
  '/teams/{id}':
    get:
      tags:
        - Teams
      summary: Find a Team Record by ID
      description: Returns a single Team Record object
      operationId: teamRead
      parameters:
        - name: id
          in: path
          description: Id of team to be returned
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: default
          content:
            application/json:
              schema:
                properties:
                  status:
                    $ref: models/Status.yaml
                  response:
                    $ref: models/Team.yaml
                type: object
        '400':
          description: Error
          content:
            application/json:
              schema:
                required:
                  - status
                properties:
                  status:
                    $ref: models/Status.yaml
    put:
      tags:
        - Teams
      summary: Update a Team Record by ID
      description: Updates a single Team Record object
      operationId: teamUpdate
      parameters:
        - name: id
          in: path
          description: Id of team to be updated
          required: true
          schema:
            type: integer
      requestBody:
        $ref: '#/components/requestBodies/Team'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                properties:
                  status:
                    $ref: models/Status.yaml
                  response:
                    type: object
                type: object
        '400':
          description: Error
          content:
            application/json:
              schema:
                required:
                  - status
                properties:
                  status:
                    $ref: models/Status.yaml
    delete:
      tags:
        - Teams
      summary: Delete a Team Record by ID
      description: Deletes a single Team Record object
      operationId: teamDelete
      parameters:
        - name: id
          in: path
          description: Id of team
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                properties:
                  status:
                    $ref: models/Status.yaml
                  response:
                    type: object
                type: object
        '400':
          description: Error
          content:
            application/json:
              schema:
                required:
                  - status
                properties:
                  status:
                    $ref: models/Status.yaml
  /users:
    post:
      tags:
        - Users
      summary: Create a User Record
      description: Creates a new User Record object
      operationId: userCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: models/User.yaml
        description: User Object
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                properties:
                  status:
                    $ref: models/Status.yaml
                  response:
                    type: object
                type: object
        '400':
          description: Error
          content:
            application/json:
              schema:
                properties:
                  status:
                    $ref: models/Status.yaml
                  response:
                    type: object
                type: object
  '/users/{id}':
    get:
      tags:
        - Users
      summary: Find a User Record by ID
      description: Returns a single User Record object
      operationId: userRead
      parameters:
        - name: id
          in: path
          description: Id of User Record to Return
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                properties:
                  response:
                    $ref: models/User.yaml
                type: object
        '400':
          description: Error
          content:
            application/json:
              schema:
                required:
                  - status
                properties:
                  status:
                    $ref: models/Status.yaml
    put:
      tags:
        - Users
      summary: Update a User Record by ID
      description: Updates a single User Record object
      operationId: userUpdate
      parameters:
        - name: id
          in: path
          description: Id of User Record to Update
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: models/User.yaml
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                properties:
                  response:
                    $ref: models/User.yaml
                type: object
        '400':
          description: Error
          content:
            application/json:
              schema:
                required:
                  - status
                properties:
                  status:
                    $ref: models/Status.yaml
    delete:
      tags:
        - Users
      summary: Delete a User Record by ID
      description: Deletes a single User Record object
      operationId: userDelete
      parameters:
        - name: id
          in: path
          description: Id of User Record to delete
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                properties:
                  status:
                    $ref: models/Status.yaml
                  response:
                    type: object
                type: object
        '400':
          description: Error
          content:
            application/json:
              schema:
                required:
                  - status
                properties:
                  status:
                    $ref: models/Status.yaml
  /users/current:
    get:
      tags:
        - Users
      summary: Find User Record of Current User
      description: Returns the User Record of the Current Active User
      operationId: userCurrent
      responses:
        '400':
          description: some error
          content:
            application/json:
              schema:
                properties:
                  status:
                    properties:
                      code:
                        type: integer
                        example: 404
                      message:
                        type: string
                        example: not found
                    type: object
                type: object
        default:
          description: default
          content:
            application/json:
              schema:
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    $ref: '#/components/schemas/User'
                type: object
  '/users/{id}/tasks':
    post:
      tags:
        - Users
      summary: Find Task Records for User by ID
      description: Returns All Existing Task Records for a single User
      operationId: userTasks
      parameters:
        - name: id
          in: path
          description: Id of user whose tasks to be returned
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                completed:
                  description: Get task records for user
                  type: integer
                start:
                  description: Get task records for user
                  type: integer
                limit:
                  description: Get task records for user
                  type: integer
              type: object
      responses:
        '400':
          description: some error
          content:
            application/json:
              schema:
                properties:
                  status:
                    properties:
                      code:
                        type: integer
                        example: 404
                      message:
                        type: string
                        example: not found
                    type: object
                type: object
        default:
          description: default
          content:
            application/json:
              schema:
                properties:
                  status:
                    $ref: '#/components/schemas/Status'
                  response:
                    description: Get task records for user
                    type: array
                    items:
                      $ref: '#/components/schemas/Task'
                type: object
  '/users/{id}/events':
    post:
      tags:
        - Users
      summary: Find Event Records for User by ID
      description: Returns All Existing Event Records for a single User
      operationId: userEvents
      parameters:
        - name: id
          in: path
          description: Id of user whose events to be returned
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                public:
                  description: Get event records for user
                  type: integer
                dismissed:
                  description: Get event records for user
                  type: integer
                start:
                  description: Get event records for user
                  type: integer
                limit:
                  description: Get event records for user
                  type: integer
              type: object
      responses:
        '400':
          description: some error
          content:
            application/json:
              schema:
                properties:
                  status:
                    properties:
                      code:
                        type: integer
                        example: 404
                      message:
                        type: string
                        example: not found
                    type: object
                type: object
        default:
          description: default
          content:
            application/json:
              schema:
                properties:
                  status:
                    $ref: models/Status.yaml
                  response:
                    description: Get event records for user
                    type: array
                    items:
                      $ref: '#/components/schemas/CalEvent'
                type: object
components:
  schemas:
    Status:
      description: ''
      properties:
        code:
          type: integer
          example: 0
        message:
          type: string
      type: object
    Stat:
      description: stat record
      properties:
        gateway:
          type: integer
        num_payments_made:
          type: integer
        total_num_payments:
          type: integer
        total_fees_paid:
          type: integer
        total_fees_owed:
          type: integer
        num_returns:
          type: integer
        num_fees_taken:
          type: integer
        total_num_fees:
          type: integer
        sum_of_cleared_payments:
          type: integer
        sum_of_payments:
          type: integer
      type: object
    CalEvent:
      description: CalEvent record
      properties:
        id:
          type: integer
          readOnly: true
        acctID:
          type: integer
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        created_by:
          type: integer
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        modified_by:
          type: integer
          readOnly: true
        assigned_to:
          type: integer
        contact_id:
          type: integer
        event_type:
          type: string
        title:
          type: string
        description:
          type: string
        location:
          type: string
        location_id:
          type: integer
        start_date:
          type: string
          format: date-time
        end_date:
          type: string
          format: date-time
        timezone:
          type: string
        utc_start:
          type: string
          format: date-time
        utc_end:
          type: string
          format: date-time
        allday:
          type: integer
        repeats:
          type: integer
        repeatswhen:
          type: string
        repeatends:
          type: string
        reminder:
          type: string
        notify_part:
          type: integer
        auto_dismiss:
          type: integer
        public:
          type: integer
        dismissed:
          type: integer
          readOnly: true
        dismissed_at:
          type: string
          format: date-time
          readOnly: true
        hidden:
          type: integer
        event_result:
          type: integer
        userfield1:
          type: string
        userfield2:
          type: string
        userfield3:
          type: string
      type: object
    Call:
      title: Call
      type: object
      description: ''
      properties:
        id:
          type: integer
          description: ID of the call record
          readOnly: true
        acctID:
          type: integer
          readOnly: true
        contactID:
          type: integer
          example: 487800700
        userID:
          type: integer
          readOnly: true
        activity_id:
          type: integer
          example: 608125717
        sdate:
          type: string
          format: date
          pattern: YYYY-mm-dd
        created_at:
          type: string
          format: date-time
          readOnly: true
        call_type:
          type: string
          enum:
            - Outgoing
            - Incoming
          example: Outgoing
        call_result:
          type: string
          example: Busy
        call_dis_id:
          type: integer
          example: 2
        notes:
          type: string
          example: Lorem Ipsum
        status_change:
          type: string
          example: '274158'
        duration:
          type: string
          format: duration
          example: 'hh:mm:ss'
        event_id:
          type: integer
          example: 8179
        dialer_id:
          type: integer
          example: 2
        recording_id:
          type: integer
      required:
        - contactID
        - call_type
        - call_result
    Campaign:
      type: object
      description: ''
      title: ''
      properties:
        id:
          type: integer
          readOnly: true
        acctID:
          type: integer
          readOnly: true
        company_id:
          type: integer
          readOnly: true
        active:
          type: boolean
          default: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        created_by:
          type: integer
          readOnly: true
        token:
          type: string
          readOnly: true
        title:
          type: string
          example: Campaign Title
        start_date:
          type: string
          format: date
          pattern: YYYY-mm-dd
        end_date:
          type: string
          format: date
          pattern: YYYY-mm-dd
        source_id:
          type: integer
          example: 3184
        cost:
          type: number
          example: 1984.25
          format: double
        cost_type:
          type: integer
          example: 1
        priority:
          type: integer
          example: 4
        external_id:
          type: integer
          readOnly: true
        media_type:
          type: integer
          example: 1
        purchase_amount:
          type: number
          example: 42
        del:
          type: boolean
          default: false
          readOnly: true
        del_by:
          type: integer
          readOnly: true
        deltime:
          type: string
          format: date-time
          readOnly: true
      required:
        - title
        - start_date
        - end_date
        - cost
        - media_type
      x-examples:
        CampaignUpdateExample:
          active: true
          title: Campaign Title
          start_date: '2019-08-24'
          end_date: '2019-08-24'
          source_id: 3184
          cost: 1984.25
          cost_type: 1
          priority: 4
          external_id: 0
          media_type: 1
          purchase_amount: 42
    Company:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        acctID:
          type: integer
          readOnly: true
        name:
          type: string
        company_code:
          type: string
        phone:
          type: string
        parent_id:
          type: integer
        company_type:
          type: integer
        created_at:
          type: string
          format: date-time
          readOnly: true
        created_by:
          type: integer
          readOnly: true
        contactname:
          type: string
        address:
          type: string
        address2:
          type: string
        city:
          type: string
        state:
          type: string
        zip:
          type: string
        phone2:
          type: string
        fax:
          type: string
        email:
          type: string
        timezone:
          type: string
        ein:
          type: string
        esign:
          type: integer
        domain:
          type: string
        gcs_account_num:
          type: string
        gcs_policy_group_id:
          type: string
        account_num:
          type: string
        routing_num:
          type: string
        bank_name:
          type: string
        account_type:
          type: string
        active:
          type: integer
        theme:
          type: string
        logo_url:
          type: string
        additional1:
          type: string
        additional2:
          type: string
        additional3:
          type: string
        additional4:
          type: string
        additional5:
          type: string
        additional6:
          type: string
        account_exec:
          type: integer
        docusign_acct:
          type: string
        docusign_pass:
          type: string
        docusign_user:
          type: string
        enroll_charge:
          type: number
        charge_payee:
          type: integer
      required:
        - name
        - company_code
        - company_type
        - contactname
        - email
    Address:
      description: address record
      properties:
        address1:
          type: string
        address2:
          type: string
        address3:
          type: string
        city:
          type: string
        state:
          type: string
        zip:
          type: string
      type: object
    Contact:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        acctID:
          type: integer
          readOnly: true
        company_id:
          type: integer
          readOnly: true
        file_type:
          type: integer
        form_id:
          type: integer
        created:
          type: string
          format: date-time
          readOnly: true
        created_by:
          type: integer
          readOnly: true
        assigned_to:
          type: integer
        campaign_id:
          type: integer
        attorney:
          type: integer
        attorney_id:
          type: integer
        attorney_id2:
          type: integer
        first_name:
          type: string
        middle_name:
          type: string
        last_name:
          type: string
        salutation:
          type: string
        title:
          type: string
        phone_number:
          type: string
        phone_extension:
          type: string
        cell_phone:
          type: string
        cell_extension:
          type: string
        work_phone:
          type: string
        work_extension:
          type: string
        address:
          $ref: '#/components/schemas/Address'
        email:
          type: string
        social_security_number:
          type: string
        date_of_birth:
          type: string
          format: date
        language:
          type: integer
        submitted:
          type: integer
        submitted_by:
          type: integer
        submitted_at:
          type: string
          format: date-time
        approved_by2:
          type: integer
        approved_date2:
          type: string
          format: date
        rejected_by:
          type: integer
        rejected_notes:
          type: string
        paused_notes:
          type: string
        dropped_reason:
          type: integer
        grad_date:
          type: string
          format: date
        total_debt:
          type: number
        welcome_sent:
          type: string
          format: date-time
        paper_statements:
          type: integer
        paper_welcome:
          type: integer
        gateway_id:
          type: integer
        gateway_approved_by:
          type: integer
        gateway_hold:
          type: integer
        gateway_hold_reason:
          type: integer
        gateway_hold_notes:
          type: string
        gateway_auth_received:
          type: integer
        gateway_auth_file:
          type: string
        iscoapp:
          type: integer
        customs:
          type: array
          items:
            type: object
            properties:
              field_id:
                type: integer
              value:
                type: string
              label:
                type: string
      required:
        - first_name
        - last_name
        - phone_number
        - address
        - email
        - date_of_birth
    Creditor:
      type: object
      properties:
        id:
          type: integer
        acctID:
          type: integer
        tp_id:
          type: integer
        is_active:
          type: integer
        company_name:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        address:
          $ref: '#/components/schemas/Address'
        phone:
          type: string
    Note:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        client_id:
          type: integer
        acctID:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        created_by:
          type: integer
          readOnly: true
        object_type:
          type: integer
          readOnly: true
        record_id:
          type: integer
        note:
          type: string
      required:
        - client_id
        - note
    Debt:
      required:
        - original_debt_amount
        - current_debt_amount
        - client_id
        - creditor
      properties:
        id:
          type: integer
          readOnly: true
        acctID:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        created_by:
          type: array
          items:
            $ref: '#/components/schemas/User'
          readOnly: true
        modified_at:
          type: string
          format: date-time
          readOnly: true
        modified_by:
          type: integer
          readOnly: true
        original_debt_amount:
          type: number
        current_debt_amount:
          type: number
        current_payment:
          type: number
        current_rate:
          type: number
        notes:
          type: string
        verified_debt_amount:
          type: number
        creditor:
          type: array
          items:
            $ref: '#/components/schemas/Creditor'
        debt_buyer:
          type: string
        poa_sent_date:
          type: string
          format: date
        legal_account:
          type: string
        last_payment_date:
          type: string
          format: date
        last_payment_amount:
          type: number
        opened_date:
          type: string
          format: date
        available_balance:
          type: number
        enrolled:
          type: integer
        enrolled_date:
          type: string
          format: date
        debt_type:
          type: integer
        debt_status:
          type: string
        locked:
          type: integer
        og_account_num:
          type: string
        creditor_account_num:
          type: string
        settled:
          type: integer
        settlement_id:
          type: integer
        client_id:
          type: integer
        settlement_offers:
          type: array
          items:
            type: string
        customs:
          type: array
          items:
            type: string
      type: object
    Docs:
      description: docs data
      properties:
        clixsign:
          type: array
          items: {}
        esigns:
          type: array
          items: {}
        docusign:
          type: array
          items: {}
        uploads:
          type: array
          items: {}
        generated:
          type: array
          items: {}
      type: object
    Loan:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        acctID:
          type: integer
          readOnly: true
        tp_id:
          type: integer
        created_at:
          type: string
          format: date-time
          readOnly: true
        created_by:
          type: integer
          readOnly: true
        modified_at:
          type: string
          format: date-time
          readOnly: true
        modified_by:
          type: integer
          readOnly: true
        client_id:
          type: integer
        advance_type:
          type: string
        advance_date:
          type: string
          format: date
        paid_in_full_date:
          type: string
          format: date
        defaulted_date:
          type: string
          format: date
        type_id:
          type: integer
        program_id:
          type: integer
        loan_class:
          type: integer
        loan_amount:
          type: number
        payback_amount:
          type: number
        rate:
          type: number
        payment:
          type: number
        holdback_percent:
          type: number
        payback_period:
          type: integer
        frequency:
          type: string
        freq_int:
          type: string
        period_amount:
          type: number
        fees:
          type: number
        conf_num:
          type: string
        underwrite_notes:
          type: string
        contract_date:
          type: string
          format: date
        contract_number:
          type: string
        funded:
          type: integer
        status:
          type: integer
        lien_pos:
          type: integer
        ach_start_date:
          type: string
          format: date
        ach_on:
          type: integer
        pricing_lock:
          type: integer
        offer_set:
          type: integer
      required:
        - client_id
        - loan_amount
        - payback_amount
    Settlement:
      description: Settlement record
      properties:
        id:
          type: integer
          readOnly: true
        contact_id:
          type: integer
        creditor:
          $ref: '#/components/schemas/Creditor'
        debt_id:
          type: integer
        created_at:
          type: string
          format: date-time
          readOnly: true
        created_by:
          type: integer
          readOnly: true
        modified_at:
          type: string
          format: date-time
          readOnly: true
        modified_by:
          type: integer
          readOnly: true
        neg_id:
          type: integer
        madeby:
          type: string
        offer_status:
          properties:
            status_id:
              type: string
            label:
              type: string
          type: object
        offer_status_date:
          type: string
          format: date
        offer_valid_date:
          type: string
          format: date
        settlement_type:
          type: integer
        debt_amount:
          type: number
        settlement_amount:
          type: number
        settlement_fee:
          type: number
        notes:
          type: string
        cred_cont_id:
          type: integer
        json:
          type: object
      type: object
    Settlementoffer:
      title: Settlement Offer
      type: object
      properties:
        offer_id:
          type: integer
          title: Offer ID
          example: 4036117
          readOnly: true
        acctID:
          type: integer
          title: Account ID
          example: 3863
          readOnly: true
        contact_id:
          title: Contact ID
          type: integer
          example: 485599270
        creditor:
          $ref: '#/components/schemas/Creditor'
        debt_id:
          title: Debt ID
          type: integer
          example: 12345
        created_at:
          type: string
          title: Created Date
          format: date-time
          readOnly: true
        created_by:
          $ref: '#/components/schemas/User'
        modified_at:
          type: string
          title: Modified Date
          format: date-time
          readOnly: true
        modified_by:
          type: integer
          title: Modified By
          readOnly: true
        neg_id:
          title: Neg ID
          type: integer
        madeby:
          title: Made By
          type: string
          example: Negotiator
        offer_status:
          title: Offer Status
          example: 3
          type: integer
        offer_status_date:
          title: Offer Status Date
          format: date
          example: '2022-03-07'
          type: string
        offer_valid_date:
          title: Offer Valid Date
          type: string
          format: date
          example: '2021-10-24'
        settlement_type:
          title: Settlement Type
          type: integer
        debt_amount:
          title: Debt Amount
          type: number
          example: 0
        settlement_amount:
          title: Settlement Amount
          type: number
          example: 0
        settlement_fee:
          title: Settlement Fee
          type: number
          example: 0
        notes:
          title: Notes
          type: string
          example: Lorem Ipsum
        cred_cont_id:
          title: Cred Cont ID
          type: integer
          example: 0
        json:
          type: object
      required:
        - contact_id
        - creditor
        - debt_id
        - offer_status
        - offer_status_date
        - offer_valid_date
        - settlement_type
        - debt_amount
        - settlement_amount
        - settlement_fee
    Task:
      description: task record
      properties:
        acctID:
          type: integer
          readOnly: true
        id:
          type: integer
          readOnly: true
        contact_id:
          type: integer
        task_created_date:
          type: string
          format: date-time
          readOnly: true
        task_name:
          type: string
        defined_task:
          type: integer
        created_by:
          type: integer
          readOnly: true
        task_due_date:
          type: string
          format: date
        task_note:
          type: string
        list_id:
          type: integer
        team_id:
          type: integer
        task_completed:
          type: integer
          readOnly: true
        task_completed_by:
          type: integer
          readOnly: true
        task_completed_date:
          type: string
          format: date-time
          readOnly: true
        task_completion_percentage:
          type: integer
        task_status:
          type: integer
        title:
          type: string
        assigned_to_id:
          type: integer
        task_type:
          type: integer
        assigned_to:
          type: string
      type: object
    TaskItem:
      description: task item
      properties:
        task_category:
          type: integer
        items:
          type: array
          items:
            properties:
              id:
                type: integer
              title:
                type: string
      type: object
    Team:
      description: User team record
      properties:
        id:
          type: integer
          readOnly: true
        acctID:
          type: integer
          readOnly: true
        company_id:
          type: integer
          readOnly: true
        name:
          type: string
      type: object
    User:
      type: object
      description: ''
      properties:
        user_id:
          title: User ID
          type: integer
          example: 6033912
          readOnly: true
        acctID:
          title: Account ID
          type: integer
          example: 3863
          readOnly: true
        guid:
          title: Group ID
          type: string
          example: ba2a29ca-f1d7-f58d-f670-fb92f716e513
        company_id:
          title: Company ID
          type: integer
          example: 42128
          readOnly: true
        parent_id:
          title: Parent ID
          type: integer
          example: 4950368
        user_type:
          title: User Type
          type: integer
          example: 1
        created:
          title: Created Date
          type: string
          format: date-time
          example: '2021-01-13 12:47:25'
          readOnly: true
        user_name:
          title: User Name
          type: string
          example: QAuser
        firstname:
          title: First Name
          type: string
          example: QA
        lastname:
          title: Last Name
          type: string
          example: Tester
        company:
          title: Company Name
          type: string
          example: Acme
        email:
          title: Company Email
          type: string
          example: mail@debtpaypro.com
        active:
          title: Active Indicator
          type: boolean
          example: true
        role:
          title: Role
          type: integer
          example: 29399
        attorney:
          title: Attorney Indicator
          type: boolean
          example: true
        payee_id:
          title: Payee ID
          type: integer
          example: 23006
        del:
          title: Del
          type: integer
          example: 0
          readOnly: true
        delTime:
          title: Delete Date
          type: string
          format: date-time
          example: '2021-01-13 12:47:25'
          readOnly: true
        pass_reset:
          title: Password Reset
          type: boolean
          example: false
        master:
          title: Master Indicator
          type: boolean
          example: false
        billable:
          title: Billable Indicator
          type: boolean
          example: true
      required:
        - email
    Call-Update:
      title: Call
      type: object
      description: ''
      properties:
        contactID:
          type: integer
        activity_id:
          type: integer
          example: 0
        sdate:
          type: string
          format: date
          pattern: YYYY-mm-dd
          example: YYYY-mm-dd
        call_type:
          type: string
          enum:
            - Outgoing
            - Incoming
        call_result:
          type: string
        call_dis_id:
          type: integer
          example: 0
        notes:
          type: string
        status_change:
          type: string
        duration:
          type: string
          format: duration
          pattern: 'hh:mm:ss'
        event_id:
          type: integer
          example: 0
        dialer_id:
          type: integer
          example: 0
        recording_id:
          type: integer
  responses:
    default:
      description: default
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                $ref: models/Status.yaml
              response:
                type: object
                properties: {}
  parameters:
    id:
      name: id
      in: query
      schema:
        type: integer
  requestBodies:
    Contact:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Contact'
      description: Contact Object
      required: true
    Loan:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Loan'
      description: Loan Object
      required: true
    Note:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Note'
      description: Note Object
      required: true
    Call:
      content:
        application/json:
          schema:
            $ref: models/Call.yaml
      description: ''
      required: true
    Campaign:
      content:
        application/json:
          schema:
            $ref: models/Campaign.yaml
      description: Campaign Object
      required: true
    Company:
      content:
        application/json:
          schema:
            $ref: models/Company.yaml
      description: Company Object
      required: true
    Debt:
      content:
        application/json:
          schema:
            $ref: models/Debt.yaml
      description: Debt Object
      required: true
    Team:
      content:
        application/json:
          schema:
            $ref: models/Team.yaml
      required: true
  securitySchemes:
    Api-Key:
      type: apiKey
      name: Api-Key
      in: header
security:
  - Api-Key: []
