{
  "swagger": "2.0",
  "info": {
    "title": "DebtPayPro API",
    "contact": {
      "email": "apisupport@debtpaypro.com"
    },
    "version": "1.0.0"
  },
  "host": "api.debtpaypro.com",
  "basePath": "/v1",
  "schemes": ["https"],
  "produces": ["application/json"],
  "paths": {
    "/accounts": {
      "post": {
        "tags": ["Accounts"],
        "summary": "Create Account",
        "consumes": [],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Account object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Account"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{id}": {
      "get": {
        "tags": ["Accounts"],
        "summary": "Read Account by Id",
        "consumes": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of account to be read",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Accounts"],
        "summary": "Update Account by Id",
        "consumes": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of account to be updated",
            "required": true,
            "type": "integer"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Account object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Account"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Accounts"],
        "summary": "Delete Account By Id",
        "consumes": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of account to be deleted",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/calls": {
      "post": {
        "tags": ["Calls"],
        "summary": "Create Calls",
        "consumes": [],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Calls object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Call"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/calls/{call_id}": {
      "get": {
        "tags": ["Calls"],
        "summary": "Read Calls by Id",
        "consumes": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of call to be read",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Calls"],
        "summary": "Update Calls by Id",
        "consumes": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of call to be updated",
            "required": true,
            "type": "integer"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Calls object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Call"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Calls"],
        "summary": "Delete Call By Id",
        "consumes": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of call to be deleted",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/campaigns/e-mail": {
      "post": {
        "tags": ["Email"],
        "summary": "Create Campaigns Email",
        "consumes": [],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Campaigns Email object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Campaign"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/campaigns/e-mail/{id}": {
      "get": {
        "tags": ["Email"],
        "summary": "Read Campaigns Email by Id",
        "consumes": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of Campaigns Email to be read",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Email"],
        "summary": "Campaigns Email by Id",
        "consumes": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of Campaigns Email to be updated",
            "required": true,
            "type": "integer"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Campaigns Email object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Campaign"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Email"],
        "summary": "Delete Campaigns Email By Id",
        "consumes": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of Campaigns Email to be deleted",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/campaigns/sms": {
      "post": {
        "tags": ["Sms"],
        "summary": "Create Campaigns Sms",
        "consumes": [],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Campaigns Sms object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Campaign"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/campaigns/sms/{id}": {
      "get": {
        "tags": ["Sms"],
        "summary": "Read Campaigns Sms by Id",
        "consumes": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of Campaigns Sms to be read",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Sms"],
        "summary": "Campaigns Sms by Id",
        "consumes": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of Campaigns Sms to be updated",
            "required": true,
            "type": "integer"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Campaigns Sms object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Campaign"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Sms"],
        "summary": "Delete Campaigns Sms By Id",
        "consumes": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of Campaigns sms to be deleted",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/companies": {
      "post": {
        "tags": ["Companies"],
        "summary": "Create Conpanies",
        "consumes": [],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Companies object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Company"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/companies/{company_id}": {
      "get": {
        "tags": ["Companies"],
        "summary": "Read Companies by Id",
        "consumes": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of Companies to be read",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Companies"],
        "summary": "Update Companies by Id",
        "consumes": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of companies to be updated",
            "required": true,
            "type": "integer"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Companies object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Company"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Companies"],
        "summary": "Delete Companies By Id",
        "consumes": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of companies to be deleted",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/conditions/getDefinitions": {
      "post": {
        "tags": ["Conditions"],
        "summary": "Get Conditions Definitions",
        "consumes": [],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/contacts/search_by_phone/{phone}": {
      "get": {
        "tags": ["contacts"],
        "summary": "Search Contacts by Phone Number",
        "consumes": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Phone Number of Contact to be searched for",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/contacts/search": {
      "get": {
        "tags": ["contacts"],
        "summary": "Search Contacts",
        "consumes": [],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/contacts": {
      "post": {
        "tags": ["Contacts"],
        "summary": "Create Contacts",
        "consumes": [],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Contacts object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Contact"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/contacts/{contact_id}": {
      "get": {
        "tags": ["Contacts"],
        "summary": "Read Contacts by Id",
        "consumes": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of contact to be read",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Contacts"],
        "summary": "Update Contacts by Id",
        "consumes": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of contact to be updated",
            "required": true,
            "type": "integer"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Contacts object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Contact"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Contacts"],
        "summary": "Delete Contacts By Id",
        "consumes": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of contact to be deleted",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/contacts/{contact_id}/coapp": {
      "get": {
        "tags": ["Contacts"],
        "summary": "Get Coapp by Contacts Id",
        "consumes": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of contact for the coapp",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/contacts/logcall": {
      "post": {
        "tags": ["Contacts"],
        "summary": "Post to contacts log",
        "consumes": [],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Contacts object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Contact"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/contacts/{contact_id}/debts": {
      "get": {
        "tags": ["Contacts"],
        "summary": "Get Debts by Contacts Id",
        "consumes": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of contact for the debt",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/contacts/{contact_id}/debts/enrolled": {
      "get": {
        "tags": ["Contacts"],
        "summary": "Get Enrolled Debts by Contacts Id",
        "consumes": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of contact for the enrolled debt",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/contacts/{contact_id}/debts/notenrolled": {
      "get": {
        "tags": ["Contacts"],
        "summary": "Get Not Enrolled Debts by Contacts Id",
        "consumes": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of contact for the not enrolled debt",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/contacts/{contact_id}/debts/settled": {
      "get": {
        "tags": ["Contacts"],
        "summary": "Get Settled Debts by Contacts Id",
        "consumes": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of contact for the settled debt",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/contacts/{contact_id}/debts/notsettled": {
      "get": {
        "tags": ["Contacts"],
        "summary": "Get Not Settled Debts by Contacts Id",
        "consumes": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of contact for the not settled debt",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/contacts/list": {
      "post": {
        "tags": ["Contacts"],
        "summary": "Create CSV File from List",
        "consumes": [],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/contacts/list/download/{export_id}": {
      "get": {
        "tags": ["Contacts"],
        "summary": "Get Contact List file by Id",
        "consumes": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of list to be exported",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/contacts/{contact_id}/enrollment/stats": {
      "get": {
        "tags": ["Contacts"],
        "summary": "Get Enrollment stats by Contacts Id",
        "consumes": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of contact for the enrollment stats",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/contacts/{contact_id}/documents": {
      "get": {
        "tags": ["Contacts"],
        "summary": "Get Documents by Contacts Id",
        "consumes": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of contact for the documents",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/contacts/{contact_id}/notes": {
      "get": {
        "tags": ["Contacts"],
        "summary": "Get Notes by Contacts Id",
        "consumes": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of contact for the notes",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/contacts/{contact_id}/tasks": {
      "get": {
        "tags": ["Contacts"],
        "summary": "Get Tasks by Contacts Id",
        "consumes": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of contact for the Tasks",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/contacts/{contact_id}/settlement_offers": {
      "get": {
        "tags": ["Contacts"],
        "summary": "Get Settlement Offers by Contacts Id",
        "consumes": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of contact for the Settlement Offers",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/contacts/getLists": {
      "get": {
        "tags": ["Contacts"],
        "summary": "Get Lists Fileds Info",
        "consumes": [],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Contacts"],
        "summary": "Get lists",
        "operationId": "contactLists",
        "consumes": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "properties": {
                "contact_info": {
                  "description": "contact_info",
                  "type": "integer"
                },
                "contact_id": {
                  "description": "contact_id",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default",
            "schema": {
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                },
                "response": {
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/contacts/{contact_id}/pull_credit/{provider}": {
      "post": {
        "tags": ["Contacts"],
        "summary": "Pull Credit Information",
        "consumes": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of contact for the Credit Pull",
            "required": true,
            "type": "integer"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of provider for the Credit Pull",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/contacts/{contact_id}/get_credit_report": {
      "get": {
        "tags": ["Contacts"],
        "summary": "Get Last Credit Report by Contacts Id",
        "consumes": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of contact for the Credit Report",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/contacts/{contact_id}/submit_to_lender/{lender}": {
      "post": {
        "tags": ["Contacts"],
        "summary": "Submit Contact Information to Lender",
        "consumes": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of contact to submit information",
            "required": true,
            "type": "integer"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of lender to submit information",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/contacts/{contact_id}/ref": {
      "post": {
        "tags": ["Contacts"],
        "summary": "Update Contact Reference Information",
        "consumes": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of contact to submit information",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/providers": {
      "get": {
        "tags": ["Providers"],
        "summary": "Get Credit Report Providers",
        "consumes": [],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/debtqueues/{id}": {
      "get": {
        "tags": ["Debtqueues"],
        "summary": "Get Debt Queues by Id",
        "consumes": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of Debt Queue to be read",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["DebtQueues"],
        "summary": "update debt queues",
        "operationId": "debtqueuesUpdate",
        "consumes": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of debt queues. If empty then insert new",
            "type": "integer",
            "default": 0
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "properties": {
                "title": {
                  "description": "title of debt queues",
                  "type": "string"
                },
                "description": {
                  "description": "description of debt queues",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default",
            "schema": {
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                },
                "response": {
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "error": {
            "description": "some error",
            "schema": {
              "properties": {
                "status": {
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": "404"
                    },
                    "message": {
                      "type": "string",
                      "example": "not found"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/debtqueues/company": {
      "get": {
        "tags": ["Debtqueues"],
        "summary": "Get Debt Queue by Company",
        "consumes": [],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/debtqueues[/{id}]": {
      "put": {
        "tags": ["Debtqueues"],
        "summary": "Update Debt Queue by Id",
        "consumes": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of Debt Queue to be updated",
            "required": true,
            "type": "integer"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Debt Queue object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DebtQueue"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/debts": {
      "post": {
        "tags": ["Debts"],
        "summary": "Create Debts",
        "consumes": [],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Debts object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Debt"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/debts/{id:[0-9]+}": {
      "get": {
        "tags": ["Debts"],
        "summary": "Read Debts by Id",
        "consumes": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of debt to be read",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Debts"],
        "summary": "Update Debts by Id",
        "consumes": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of debt to be updated",
            "required": true,
            "type": "integer"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Debts object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Debt"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Debts"],
        "summary": "Delete Debt By Id",
        "consumes": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of debt to be deleted",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/debts/{id:[0-9]+}/notes": {
      "get": {
        "tags": ["Debts"],
        "summary": "Read Debt Notes by Id",
        "consumes": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of debt to be read",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Debts"],
        "summary": "Update Debt Notes by Id",
        "consumes": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of debt to be updated",
            "required": true,
            "type": "integer"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Debts object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Debt"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/debts/{id:[0-9]+}/tasks": {
      "get": {
        "tags": ["Debts"],
        "summary": "Read Debt Tasks by Id",
        "consumes": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of debt to be read",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/debts/{id:[0-9]+}/settlement_offers": {
      "get": {
        "tags": ["Debts"],
        "summary": "Get Debt Settlement Offers by Id",
        "consumes": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of debt to be read",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/debts/{id:[0-9]+}/task": {
      "get": {
        "tags": ["Debts"],
        "summary": "Read Debt Task by Id",
        "consumes": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of debt to be read",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/debts/getLists": {
      "post": {
        "tags": ["Debts"],
        "summary": "Get Debts Lists",
        "consumes": [],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/debts/notes/{id:[0-9]+}": {
      "delete": {
        "tags": ["Debts"],
        "summary": "Delete Debt Note By Id",
        "consumes": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of debts note to be deleted",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/documents/document-types": {
      "get": {
        "tags": ["Documents"],
        "summary": "Get all document types",
        "consumes": [],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/documents": {
      "get": {
        "tags": ["Documents"],
        "summary": "Get all documents",
        "consumes": [],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/documents/getfile": {
      "post": {
        "tags": ["Documents"],
        "summary": "Get Document File",
        "consumes": [],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Document object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/documents/htmltopdf": {
      "post": {
        "tags": ["Documents"],
        "summary": "Convert HTML to PDF",
        "consumes": [],
        "parameters": [
          {
            "name": "document",
            "in": "query",
            "description": "HTML to be converted",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/documents/{template_id}": {
      "post": {
        "tags": ["Documents"],
        "summary": "Generate Document by Template Id",
        "consumes": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of template to be generated",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/documents/packages/{package_id}": {
      "get": {
        "tags": ["Packages"],
        "summary": "Get Package record",
        "consumes": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of package to be returned",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Packages"],
        "summary": "Update Document Package By Id",
        "consumes": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of package to be Updated",
            "required": true,
            "type": "integer"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Package object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Package"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Packages"],
        "summary": "Generate Document Package By Id",
        "consumes": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of package to be generated",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Packages"],
        "summary": "Delete Document Package By Id",
        "consumes": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of package to be deleted",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/documents/packages": {
      "get": {
        "tags": ["Packages"],
        "summary": "Get All Packages",
        "consumes": [],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Packages"],
        "summary": "Create Document Package",
        "consumes": [],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Package object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Package"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/importcsv": {
      "post": {
        "tags": ["Csv"],
        "summary": "Import CSV File",
        "consumes": [],
        "parameters": [
          {
            "name": "import_id",
            "in": "path",
            "description": "Import Id of CSV",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/validatecsv": {
      "post": {
        "tags": ["Csv"],
        "summary": "Validate CSV File",
        "consumes": [],
        "parameters": [
          {
            "name": "import_id",
            "in": "path",
            "description": "Import Id of CSV",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/import/{import_id}/status": {
      "get": {
        "tags": ["Csv"],
        "summary": "Get Status of CSV Import",
        "consumes": [],
        "parameters": [
          {
            "name": "import_id",
            "in": "path",
            "description": "Import Id of CSV",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/lenders": {
      "get": {
        "tags": ["Lenders"],
        "summary": "Get Available Lenders",
        "consumes": [],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/lenders/offer/{id}": {
      "get": {
        "tags": ["Offers"],
        "summary": "Get Lender Offers by Id",
        "consumes": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of offer to be read",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/loans": {
      "post": {
        "tags": ["Loans"],
        "summary": "Create Loan",
        "consumes": [],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Loan object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Loan"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/loans/{loan_id}": {
      "get": {
        "tags": ["Loans"],
        "summary": "Read Loan by Id",
        "consumes": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of loan to be read",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Loans"],
        "summary": "Update Loan by Id",
        "consumes": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of loan to be updated",
            "required": true,
            "type": "integer"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Loan object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Loan"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Loans"],
        "summary": "Delete Loan By Id",
        "consumes": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of loan to be deleted",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/note_templates": {
      "get": {
        "tags": ["Notes"],
        "summary": "Get all Note Templates",
        "consumes": [],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/notes": {
      "post": {
        "tags": ["Notes"],
        "summary": "Create Notes",
        "consumes": [],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Notes object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Note"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/notes/{note_id}": {
      "get": {
        "tags": ["Notes"],
        "summary": "Read Note by Id",
        "consumes": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of note to be read",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Notes"],
        "summary": "Update Note by Id",
        "consumes": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of note to be updated",
            "required": true,
            "type": "integer"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Note object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Note"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Notes"],
        "summary": "Delete Note By Id",
        "consumes": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of note to be deleted",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/portal/domains": {
      "get": {
        "tags": ["Portal"],
        "summary": "Get Portal Domains",
        "consumes": [],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/portal/domain/{domain_id}": {
      "put": {
        "tags": ["Portal"],
        "summary": "Update Portal Domain by Id",
        "consumes": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of portal domain to be updated",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/portal/company/{domain_id}": {
      "get": {
        "tags": ["Portal"],
        "summary": "Get Company by Portal Domain Id",
        "consumes": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of Portal Domain to be read",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Portal"],
        "summary": "Create Company for the Portal Domain Id",
        "consumes": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of Portal Domain for the Company",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Portal"],
        "summary": "Delete Company for the Portal Domain Id",
        "consumes": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of Portal Domain for the Company",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/portal/company/module/{domain_id}": {
      "get": {
        "tags": ["Portal"],
        "summary": "Get Company Module by Portal Domain Id",
        "consumes": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of Portal Domain to be read",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Portal"],
        "summary": "Update Company Module by Portal Domain Id",
        "consumes": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of Portal Domain to be updated",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/portal/company/email/{domain_id}": {
      "get": {
        "tags": ["Portal"],
        "summary": "Get Company Email by Portal Domain Id",
        "consumes": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of Portal Domain to be read",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Portal"],
        "summary": "Update Company Email by Portal Domain Id",
        "consumes": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of Portal Domain to be updated",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/portal/company/permission/{domain_id}": {
      "put": {
        "tags": ["Portal"],
        "summary": "Update Company Permission by Portal Domain Id",
        "consumes": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of Portal Domain to be updated",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/portal/company/support/{domain_id}": {
      "put": {
        "tags": ["Portal"],
        "summary": "Update Company Support by Portal Domain Id",
        "consumes": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of Portal Domain to be updated",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/portal/company/terminology/{domain_id}": {
      "put": {
        "tags": ["Portal"],
        "summary": "Update Company Terminology by Portal Domain Id",
        "consumes": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of Portal Domain to be updated",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/roles": {
      "get": {
        "tags": ["Roles"],
        "summary": "Get Roles",
        "consumes": [],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/sendemail/getecontent": {
      "get": {
        "tags": ["Sendemail"],
        "summary": "Get Sendmail Content",
        "consumes": [],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/sendemail/gettemplates": {
      "get": {
        "tags": ["Sendemail"],
        "summary": "Get Sendmail Templates",
        "consumes": [],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/sendemail": {
      "post": {
        "tags": ["Sendemail"],
        "summary": "Send Email",
        "consumes": [],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/settings/group/{group}/values": {
      "get": {
        "tags": ["Settings"],
        "summary": "Get Settings Values by Group Id",
        "consumes": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of Group to be read",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/settings/values[/{settings_key}]": {
      "get": {
        "tags": ["Settings"],
        "summary": "Get Settings Values by Settings Key",
        "consumes": [],
        "parameters": [
          {
            "name": "settings_key",
            "in": "path",
            "description": "Key of Setting to be read",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/settings/group/{group}/definitions": {
      "get": {
        "tags": ["Settings"],
        "summary": "Get Group Definition by Group Id",
        "consumes": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of Group to be read",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/settlement_offers": {
      "post": {
        "tags": ["SettlementOffers"],
        "summary": "Create Settlement Offers",
        "consumes": [],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Settlement Offers object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Settlementoffer"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/settlement_offers/{id}": {
      "get": {
        "tags": ["SettlementOffers"],
        "summary": "Read Settlement Offers by Id",
        "consumes": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Settlement Offer",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["SettlementOffers"],
        "summary": "Update Settlement Offers by Id",
        "consumes": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of Settlement Offer to be updated",
            "required": true,
            "type": "integer"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Settlement Offers",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Settlementoffer"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["SettlementOffers"],
        "summary": "Delete Settlement Offers By Id",
        "consumes": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of Settlement Offers to be deleted",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/settlements/{id}/contact": {
      "get": {
        "tags": ["Settlements"],
        "summary": "Get Contact by Settlements Id",
        "consumes": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of settlement for contact",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/settlements/{id}/contacts": {
      "get": {
        "tags": ["Settlements"],
        "summary": "Get All Contacts by Settlements Id",
        "consumes": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of settlement for contacts",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/settlements/{id}/extended": {
      "get": {
        "tags": ["Settlements"],
        "summary": "Get Extended Information by Settlements Id",
        "consumes": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of settlement for extended information",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/settlements/{id}/debt": {
      "get": {
        "tags": ["Settlements"],
        "summary": "Get Debt by Settlements Id",
        "consumes": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of settlement for debt",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/settlements/{id}/snapshot": {
      "get": {
        "tags": ["Settlements"],
        "summary": "Get Snapshot by Settlements Id",
        "consumes": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of settlement for snapshot",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/settlements/{id}/assignments": {
      "get": {
        "tags": ["Settlements"],
        "summary": "Get assignments by Settlements Id",
        "consumes": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of settlement for assignments",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/settlements/{id}/documents": {
      "get": {
        "tags": ["Settlements"],
        "summary": "Get documents by Settlements Id",
        "consumes": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of settlement for documents",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/settlements/{id}": {
      "get": {
        "tags": ["Settlements"],
        "summary": "Get Settlements by Settlements Id",
        "consumes": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of settlement",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/settlements/settings": {
      "get": {
        "tags": ["Settlements"],
        "summary": "Get Settlement Settings",
        "consumes": [],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/settlements/settings/getworkflow": {
      "post": {
        "tags": ["Settlements"],
        "summary": "Get Settlements Workflow",
        "consumes": [],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/check_funds/mca": {
      "post": {
        "tags": ["MCA"],
        "summary": "Check MCA Funds",
        "consumes": [],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/submit/mca": {
      "post": {
        "tags": ["MCA"],
        "summary": "Submit MCA",
        "consumes": [],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/funding/{id}/fund": {
      "post": {
        "tags": ["MCA"],
        "summary": "Fund MCA by Id",
        "consumes": [],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/funding/{id}/cancel": {
      "post": {
        "tags": ["MCA"],
        "summary": "Cancel MCA by Id",
        "consumes": [],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/send-sms-code": {
      "get": {
        "tags": ["Supervest"],
        "summary": "Send SMS Code",
        "consumes": [],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/lookups/ein/{EIN}": {
      "get": {
        "tags": ["Lookups"],
        "summary": "Lookup Ein Code",
        "consumes": [],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/tasks": {
      "post": {
        "tags": ["Tasks"],
        "summary": "Create Tasks",
        "consumes": [],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Tasks object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/tasks/{task_id}": {
      "get": {
        "tags": ["Tasks"],
        "summary": "Read Tasks by Id",
        "consumes": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of task to be read",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Tasks"],
        "summary": "Update Tasks by Id",
        "consumes": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of task to be updated",
            "required": true,
            "type": "integer"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Tasks object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Tasks"],
        "summary": "Delete Task By Id",
        "consumes": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of task to be deleted",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/tasks/{task_id]+}/complete": {
      "put": {
        "tags": ["Tasks"],
        "summary": "Mark Tasks Complete by Id",
        "consumes": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of task to be marked complete",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/task_items": {
      "get": {
        "tags": ["Tasks"],
        "summary": "get task items",
        "operationId": "taskItemsGet",
        "responses": {
          "default": {
            "description": "default",
            "schema": {
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                },
                "response": {
                  "description": "get task items",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/TaskItem"
                  }
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": ["Tasks"],
        "summary": "Get Task Items",
        "consumes": [],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/teams": {
      "get": {
        "tags": ["Teams"],
        "summary": "Get All Teams",
        "consumes": [],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Teams"],
        "summary": "Create Team",
        "consumes": [],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Teams object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Team"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/teams/{team_id}": {
      "get": {
        "tags": ["Teams"],
        "summary": "Read Teams by Id",
        "consumes": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of team to be read",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Teams"],
        "summary": "Update Teams by Id",
        "consumes": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of team to be updated",
            "required": true,
            "type": "integer"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Teams object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Team"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Teams"],
        "summary": "Delete Team By Id",
        "consumes": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of team to be deleted",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": ["Users"],
        "summary": "Get All Users",
        "consumes": [],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Users"],
        "summary": "Create Users",
        "consumes": [],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Users object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}": {
      "get": {
        "tags": ["Users"],
        "summary": "Read Users by Id",
        "consumes": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of user to be read",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Users"],
        "summary": "Update Users by Id",
        "consumes": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of user to be updated",
            "required": true,
            "type": "integer"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Users object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Users"],
        "summary": "Delete User By Id",
        "consumes": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of user to be deleted",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/users/current": {
      "get": {
        "tags": ["Users"],
        "summary": "Get Current Users",
        "consumes": [],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}/tasks": {
      "post": {
        "tags": ["Users"],
        "summary": "Update Users Tasks by User Id",
        "consumes": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of user to have tasks updated",
            "required": true,
            "type": "integer"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Users object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}/events": {
      "post": {
        "tags": ["Users"],
        "summary": "Update Users Events by User Id",
        "consumes": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of user to have events updated",
            "required": true,
            "type": "integer"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Users object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/users/recentpages": {
      "get": {
        "tags": ["Users"],
        "summary": "Get Users Recent Pages",
        "consumes": [],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/utilities/states": {
      "get": {
        "tags": ["States"],
        "summary": "Get All States",
        "consumes": [],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/utilities/filetypes": {
      "get": {
        "tags": ["Filetypes"],
        "summary": "Get All Filetypes",
        "consumes": [],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "required": ["status"],
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                }
              }
            }
          }
        }
      }
    },
    "/campaigns/e-mail/{campaign_id}": {
      "get": {
        "tags": ["Campaigns"],
        "summary": "Get campaign record by id",
        "operationId": "campaignRead",
        "parameters": [
          {
            "name": "campaign_id",
            "in": "path",
            "description": "Id of campaign to be returned",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "default",
            "schema": {
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                },
                "response": {
                  "description": "Get campaign record by id",
                  "$ref": "#/definitions/Campaign"
                }
              },
              "type": "object"
            }
          },
          "error": {
            "description": "some error",
            "schema": {
              "properties": {
                "status": {
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": "404"
                    },
                    "message": {
                      "type": "string",
                      "example": "not found"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "put": {
        "tags": ["Campaigns"],
        "summary": "Update campaign record by id",
        "operationId": "campaignUpdate",
        "consumes": ["application/json"],
        "parameters": [
          {
            "name": "campaign_id",
            "in": "path",
            "description": "Id of campaign to be updated",
            "required": true,
            "type": "integer"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Campaign object that will be update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Campaign"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default",
            "schema": {
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                },
                "response": {
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "error": {
            "description": "some error",
            "schema": {
              "properties": {
                "status": {
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": "404"
                    },
                    "message": {
                      "type": "string",
                      "example": "not found"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "delete": {
        "tags": ["Campaigns"],
        "summary": "Delete campaign record by id",
        "operationId": "campaignDelete",
        "parameters": [
          {
            "name": "campaign_id",
            "in": "path",
            "description": "Id of campaign object to be deleted",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "default",
            "schema": {
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                },
                "response": {
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "error": {
            "description": "some error",
            "schema": {
              "properties": {
                "status": {
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": "404"
                    },
                    "message": {
                      "type": "string",
                      "example": "not found"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/contacts/{client_id}": {
      "get": {
        "tags": ["Contacts"],
        "summary": "Get contact record by id",
        "operationId": "contactRead",
        "parameters": [
          {
            "name": "client_id",
            "in": "path",
            "description": "Id of client to be returned",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "default",
            "schema": {
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                },
                "response": {
                  "description": "contact details",
                  "$ref": "#/definitions/Contact"
                }
              },
              "type": "object"
            }
          },
          "error": {
            "description": "some error",
            "schema": {
              "properties": {
                "status": {
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": "404"
                    },
                    "message": {
                      "type": "string",
                      "example": "not found"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "put": {
        "tags": ["Contacts"],
        "summary": "Update contact record by id",
        "operationId": "contactUpdate",
        "consumes": ["application/json"],
        "parameters": [
          {
            "name": "client_id",
            "in": "path",
            "description": "Id of client to be updated",
            "required": true,
            "type": "integer"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Contact object that will be updated",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Contact"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default",
            "schema": {
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                },
                "response": {
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "error": {
            "description": "some error",
            "schema": {
              "properties": {
                "status": {
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": "404"
                    },
                    "message": {
                      "type": "string",
                      "example": "not found"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "delete": {
        "tags": ["Contacts"],
        "summary": "Delete contact record by id",
        "operationId": "contactDelete",
        "parameters": [
          {
            "name": "client_id",
            "in": "path",
            "description": "Id of contact object to be delete",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "default",
            "schema": {
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                },
                "response": {
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "error": {
            "description": "some error",
            "schema": {
              "properties": {
                "status": {
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": "404"
                    },
                    "message": {
                      "type": "string",
                      "example": "not found"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/contacts/{id}/coapp": {
      "get": {
        "tags": ["Contacts"],
        "summary": "Gets the contact Co-Applicant",
        "operationId": "contactCoapp",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of contact",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "default",
            "schema": {
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                },
                "response": {
                  "description": "Gets the contact Co-Applicant",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Contact"
                  }
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/contacts/{id}/ref": {
      "post": {
        "tags": ["Contacts"],
        "summary": "change or update Account Contacts Ref",
        "operationId": "contactRefUpdate",
        "consumes": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "properties": {
                "id": {
                  "description": "Id of contact to be updated",
                  "required": true,
                  "type": "integer",
                  "in": "path"
                },
                "type": {
                  "description": "type of contact",
                  "type": "integer"
                },
                "authorized": {
                  "description": "contact authorized (1/0)",
                  "type": "integer"
                },
                "link": {
                  "description": "link account contact",
                  "type": "integer"
                },
                "unlink": {
                  "description": "unlink account contact",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default",
            "schema": {
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                },
                "response": {
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "error": {
            "description": "some error",
            "schema": {
              "properties": {
                "status": {
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": "404"
                    },
                    "message": {
                      "type": "string",
                      "example": "not found"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/debts/{debt_id}": {
      "get": {
        "tags": ["Debts"],
        "summary": "Get debt record by id",
        "operationId": "debtRead",
        "parameters": [
          {
            "name": "debt_id",
            "in": "path",
            "description": "Id of debt to be returned",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "default",
            "schema": {
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                },
                "response": {
                  "description": "Get debt record by id",
                  "$ref": "#/definitions/Debt"
                }
              },
              "type": "object"
            }
          },
          "error": {
            "description": "some error",
            "schema": {
              "properties": {
                "status": {
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": "404"
                    },
                    "message": {
                      "type": "string",
                      "example": "not found"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "put": {
        "tags": ["Debts"],
        "summary": "Update debt record by id",
        "operationId": "debtUpdate",
        "consumes": ["application/json"],
        "parameters": [
          {
            "name": "debt_id",
            "in": "path",
            "description": "Id of debt to be updated",
            "required": true,
            "type": "integer"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Debt object to be updated",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Debt"
            }
          }
        ],
        "responses": {
          "success": {
            "description": "after creation",
            "schema": {
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                },
                "response": {
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": "123"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "error": {
            "description": "some error",
            "schema": {
              "properties": {
                "status": {
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": "404"
                    },
                    "message": {
                      "type": "string",
                      "example": "not found"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "delete": {
        "tags": ["Debts"],
        "summary": "Delete debt record by id",
        "operationId": "debtDelete",
        "parameters": [
          {
            "name": "debt_id",
            "in": "path",
            "description": "Id of debt to be deleted",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "default",
            "schema": {
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                },
                "response": {
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "error": {
            "description": "some error",
            "schema": {
              "properties": {
                "status": {
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": "404"
                    },
                    "message": {
                      "type": "string",
                      "example": "not found"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/debts/{id}/notes": {
      "post": {
        "tags": ["Debts"],
        "summary": "save Debt Notes",
        "operationId": "debtNotesSave",
        "consumes": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of debt",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "properties": {
                "notify_users": {
                  "description": "notify users",
                  "required": true,
                  "type": "array"
                },
                "content": {
                  "description": "notes",
                  "required": true,
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default",
            "schema": {
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                },
                "response": {
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/debts/notes/{id}": {
      "delete": {
        "tags": ["Debts"],
        "summary": "delete Debt Notes",
        "operationId": "debtNoteDelete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of debt",
            "required": true
          }
        ],
        "responses": {
          "default": {
            "description": "default",
            "schema": {
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                },
                "response": {
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/debts/{id}/tasks": {
      "get": {
        "tags": ["Debts"],
        "summary": "get tasks by debt ID",
        "operationId": "debtTasksGet",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of debt",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "default",
            "schema": {
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                },
                "response": {
                  "description": "get tasks by debt ID",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Task"
                  }
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/debts/{id}/task": {
      "post": {
        "tags": ["Debts"],
        "summary": "add Debt Task",
        "operationId": "debtTaskAdd",
        "consumes": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of debt",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "properties": {
                "assigned_to": {
                  "description": "add Debt Task",
                  "properties": {
                    "id": {
                      "description": "add Debt Task",
                      "type": "integer"
                    },
                    "type": {
                      "description": "add Debt Task",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "defined_task": {
                  "description": "add Debt Task",
                  "type": "integer"
                },
                "task_name": {
                  "description": "add Debt Task",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default",
            "schema": {
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                },
                "response": {
                  "description": "add Debt Task",
                  "properties": {
                    "debt": {
                      "description": "add Debt Task",
                      "$ref": "#/definitions/Debt"
                    },
                    "debt_task_id": {
                      "description": "add Debt Task",
                      "type": "integer"
                    },
                    "task": {
                      "description": "add Debt Task",
                      "$ref": "#/definitions/Task"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/debts/{id}/settlement_offers": {
      "get": {
        "tags": ["Debts"],
        "summary": "get settlement offers by debt",
        "operationId": "debtSettlementOffers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of debt",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "default",
            "schema": {
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                },
                "response": {
                  "description": "get settlement offers by debt",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Settlementoffer"
                  }
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/documents/template/{id}": {
      "get": {
        "tags": ["Documents"],
        "summary": "get document`s template",
        "operationId": "documentTemplateGet",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of template to be returned",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "default",
            "schema": {
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                },
                "response": {
                  "description": "get document`s template",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Document"
                  }
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/lenders/offer/{offer_id}": {
      "get": {
        "tags": ["Lenders"],
        "summary": "get loan offer by Id",
        "operationId": "lenderLoanOfferGet",
        "parameters": [
          {
            "name": "offer_id",
            "in": "path",
            "description": "Id of loan offer",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "default",
            "schema": {
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                },
                "response": {
                  "description": "get loan offer by Id",
                  "$ref": "#/definitions/LoanOffer"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/package": {
      "get": {
        "tags": ["Packages"],
        "summary": "get all Packages",
        "operationId": "packagesRead",
        "responses": {
          "default": {
            "description": "default",
            "schema": {
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                },
                "response": {
                  "description": "get all Packages",
                  "type": "array",
                  "items": {
                    "properties": {
                      "key": {
                        "description": "get all Packages",
                        "type": "integer"
                      },
                      "title": {
                        "description": "get all Packages",
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": ["Packages"],
        "summary": "create Package record",
        "operationId": "packageCreate",
        "consumes": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Contact object",
            "required": true
          }
        ],
        "responses": {
          "default": {
            "description": "default",
            "schema": {
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                },
                "response": {
                  "description": "contact details",
                  "$ref": "#/definitions/Contact"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/package/{id}": {
      "get": {
        "tags": ["Packages"],
        "summary": "get Package",
        "operationId": "packageRead",
        "responses": {
          "default": {
            "description": "default",
            "schema": {
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                },
                "response": {
                  "description": "get Package",
                  "type": "array",
                  "items": {
                    "properties": {
                      "key": {
                        "description": "get Package",
                        "type": "integer"
                      },
                      "title": {
                        "description": "get Package",
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": ["Packages"],
        "summary": "update Package record",
        "operationId": "packageUpdate",
        "consumes": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Contact object",
            "required": true
          }
        ],
        "responses": {
          "default": {
            "description": "default",
            "schema": {
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                },
                "response": {
                  "description": "contact details",
                  "$ref": "#/definitions/Contact"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/sendemail/getetemplates": {
      "get": {
        "tags": ["Emails"],
        "summary": "get etemplates",
        "operationId": "emailTemplateGet",
        "responses": {
          "default": {
            "description": "default",
            "schema": {
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                },
                "response": {
                  "description": "get etemplates",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Ecampaign"
                  }
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/settings/values/{settings_key}": {
      "get": {
        "tags": ["Settings"],
        "summary": "get Settings Values",
        "operationId": "settingsValues",
        "parameters": [
          {
            "name": "settings_key",
            "in": "path",
            "description": "settings key",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "default",
            "schema": {
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                },
                "response": {
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/settlement_offers/{offer_id}": {
      "get": {
        "tags": ["Settlement offers"],
        "summary": "Get settlement offer record by id",
        "operationId": "settlementOfferRead",
        "parameters": [
          {
            "name": "offer_id",
            "in": "path",
            "description": "Id of settlement offer to be returned",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "default",
            "schema": {
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                },
                "response": {
                  "description": "Get settlement offer record by id",
                  "$ref": "#/definitions/Settlementoffer"
                }
              },
              "type": "object"
            }
          },
          "error": {
            "description": "some error",
            "schema": {
              "properties": {
                "status": {
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": "404"
                    },
                    "message": {
                      "type": "string",
                      "example": "not found"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "delete": {
        "tags": ["Settlement offers"],
        "summary": "Delete settlement offer record by id",
        "operationId": "settlementOfferDelete",
        "parameters": [
          {
            "name": "offer_id",
            "in": "path",
            "description": "Id of settlement offer to be deleted",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "default",
            "schema": {
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                },
                "response": {
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "error": {
            "description": "some error",
            "schema": {
              "properties": {
                "status": {
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": "404"
                    },
                    "message": {
                      "type": "string",
                      "example": "not found"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/tasks/{task_id}/complete": {
      "put": {
        "tags": ["Tasks"],
        "summary": "mark task Complete",
        "operationId": "taskMarkComplete",
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "description": "Id of task",
            "required": true
          }
        ],
        "responses": {
          "default": {
            "description": "default",
            "schema": {
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                },
                "response": {
                  "description": "mark task Complete",
                  "$ref": "#/definitions/Task"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/users/{id}/tasks": {
      "post": {
        "tags": ["Users"],
        "summary": "Get task records for user",
        "description": "this request gets the tasks for user",
        "operationId": "userTasks",
        "consumes": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of user whose tasks to be returned",
            "required": true,
            "type": "integer"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "properties": {
                "completed": {
                  "description": "Get task records for user",
                  "type": "integer"
                },
                "start": {
                  "description": "Get task records for user",
                  "type": "integer"
                },
                "limit": {
                  "description": "Get task records for user",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default",
            "schema": {
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                },
                "response": {
                  "description": "Get task records for user",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Task"
                  }
                }
              },
              "type": "object"
            }
          },
          "error": {
            "description": "some error",
            "schema": {
              "properties": {
                "status": {
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": "404"
                    },
                    "message": {
                      "type": "string",
                      "example": "not found"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/users/{id}/events": {
      "post": {
        "tags": ["Users"],
        "summary": "Get event records for user",
        "description": "this request gets the events for user",
        "operationId": "userEvents",
        "consumes": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of user whose events to be returned",
            "required": true,
            "type": "integer"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "properties": {
                "public": {
                  "description": "Get event records for user",
                  "type": "integer"
                },
                "dismissed": {
                  "description": "Get event records for user",
                  "type": "integer"
                },
                "start": {
                  "description": "Get event records for user",
                  "type": "integer"
                },
                "limit": {
                  "description": "Get event records for user",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default",
            "schema": {
              "properties": {
                "status": {
                  "type": "object",
                  "$ref": "#/definitions/Status"
                },
                "response": {
                  "description": "Get event records for user",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CalEvent"
                  }
                }
              },
              "type": "object"
            }
          },
          "error": {
            "description": "some error",
            "schema": {
              "properties": {
                "status": {
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": "404"
                    },
                    "message": {
                      "type": "string",
                      "example": "not found"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Status": {
      "description": "",
      "properties": {
        "code": {
          "type": "integer",
          "example": "200"
        },
        "message": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Stat": {
      "description": "stat record",
      "properties": {
        "gateway": {
          "type": "integer"
        },
        "num_payments_made": {
          "type": "integer"
        },
        "total_num_payments": {
          "type": "integer"
        },
        "total_fees_paid": {
          "type": "integer"
        },
        "total_fees_owed": {
          "type": "integer"
        },
        "num_returns": {
          "type": "integer"
        },
        "num_fees_taken": {
          "type": "integer"
        },
        "total_num_fees": {
          "type": "integer"
        },
        "sum_of_cleared_payments": {
          "type": "integer"
        },
        "sum_of_payments": {
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Account": {
      "description": "account record",
      "properties": {
        "account_id": {
          "type": "integer"
        },
        "account_number": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CalEvent": {
      "description": "CalEvent record",
      "properties": {
        "id": {
          "type": "integer",
          "readOnly": "true"
        },
        "acctID": {
          "type": "integer",
          "readOnly": "true"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "readOnly": "true"
        },
        "created_by": {
          "type": "integer",
          "readOnly": "true"
        },
        "modified": {
          "type": "string",
          "format": "date-time",
          "readOnly": "true"
        },
        "modified_by": {
          "type": "integer",
          "readOnly": "true"
        },
        "assigned_to": {
          "type": "integer"
        },
        "contact_id": {
          "type": "integer"
        },
        "event_type": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "location_id": {
          "type": "integer"
        },
        "start_date": {
          "required": "true",
          "type": "string",
          "format": "date-time"
        },
        "end_date": {
          "required": "true",
          "type": "string",
          "format": "date-time"
        },
        "timezone": {
          "type": "string"
        },
        "utc_start": {
          "type": "string",
          "format": "date-time"
        },
        "utc_end": {
          "type": "string",
          "format": "date-time"
        },
        "allday": {
          "type": "integer"
        },
        "repeats": {
          "type": "integer"
        },
        "repeatswhen": {
          "type": "string"
        },
        "repeatends": {
          "type": "string"
        },
        "reminder": {
          "type": "string"
        },
        "notify_part": {
          "type": "integer"
        },
        "auto_dismiss": {
          "type": "integer"
        },
        "public": {
          "type": "integer"
        },
        "dismissed": {
          "type": "integer",
          "readOnly": "true"
        },
        "dismissed_at": {
          "type": "string",
          "format": "date-time",
          "readOnly": "true"
        },
        "hidden": {
          "type": "integer"
        },
        "event_result": {
          "type": "integer"
        },
        "userfield1": {
          "type": "string"
        },
        "userfield2": {
          "type": "string"
        },
        "userfield3": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Call": {
      "properties": {
        "call_id": {
          "type": "integer",
          "readOnly": "true",
          "example": 364778265
        },
        "acctID": {
          "type": "integer",
          "readOnly": "true",
          "example": 4490
        },
        "contactID": {
          "required": "true",
          "type": "integer",
          "example": 487800700
        },
        "userID": {
          "type": "integer",
          "readOnly": "true",
          "example": 6260056
        },
        "activity_id": {
          "type": "integer",
          "example": 12345
        },
        "sdate": {
          "type": "string",
          "format": "date",
          "example": "2021-09-02"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "readOnly": "true",
          "example": "2021-09-07 04:23:35"
        },
        "call_type": {
          "type": "string",
          "example": "Outgoing"
        },
        "call_result": {
          "type": "string",
          "example": "Busy"
        },
        "call_dis_id": {
          "type": "integer",
          "example": 2
        },
        "notes": {
          "type": "string",
          "example": "lorem ipsum"
        },
        "status_change": {
          "type": "integer",
          "example": 274158
        },
        "duration": {
          "type": "string",
          "format": "time",
          "example": "00:01:15"
        },
        "event_id": {
          "type": "integer",
          "example": 8179
        },
        "dialer_id": {
          "type": "integer",
          "example": 2
        },
        "recording_id": {
          "type": "integer",
          "example": 3
        }
      },
      "type": "object"
    },
    "Campaign": {
      "properties": {
        "active": {
          "type": "integer"
        },
        "campaign_id": {
          "type": "integer",
          "readOnly": "true"
        },
        "company_id": {
          "type": "integer",
          "readOnly": "true"
        },
        "cost": {
          "type": "number"
        },
        "cost_type": {
          "type": "integer"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "readOnly": "true"
        },
        "created_by": {
          "type": "integer",
          "readOnly": "true"
        },
        "del": {
          "type": "integer",
          "readOnly": "true"
        },
        "del_by": {
          "type": "integer",
          "readOnly": "true"
        },
        "deltime": {
          "type": "string",
          "format": "date-time",
          "readOnly": "true"
        },
        "end_date": {
          "type": "string",
          "format": "date",
          "example": "2021-06-28"
        },
        "external_id": {
          "type": "integer"
        },
        "media_type": {
          "type": "integer"
        },
        "priority": {
          "type": "integer",
          "example": 5
        },
        "purchase_amount": {
          "type": "number"
        },
        "source_id": {
          "type": "integer"
        },
        "start_date": {
          "type": "string",
          "format": "date",
          "example": "2021-06-28"
        },
        "title": {
          "type": "string",
          "example": "110111 - Wiscos"
        },
        "token": {
          "type": "string",
          "readOnly": "true"
        }
      },
      "type": "object"
    },
    "Company": {
      "properties": {
        "account_exec": {
          "type": "integer"
        },
        "account_num": {
          "type": "string"
        },
        "account_type": {
          "type": "string"
        },
        "acctID": {
          "type": "integer",
          "readOnly": "true"
        },
        "active": {
          "type": "integer"
        },
        "additional1": {
          "type": "string"
        },
        "additional2": {
          "type": "string"
        },
        "additional3": {
          "type": "string"
        },
        "additional4": {
          "type": "string"
        },
        "additional5": {
          "type": "string"
        },
        "additional6": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "address2": {
          "type": "string"
        },
        "bank_name": {
          "type": "string"
        },
        "charge_payee": {
          "type": "integer"
        },
        "city": {
          "type": "string"
        },
        "company_code": {
          "type": "string"
        },
        "company_id": {
          "type": "integer",
          "readOnly": "true"
        },
        "company_type": {
          "type": "integer"
        },
        "contactname": {
          "type": "string"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "readOnly": "true"
        },
        "created_by": {
          "type": "integer",
          "readOnly": "true"
        },
        "docusign_acct": {
          "type": "string"
        },
        "docusign_pass": {
          "type": "string"
        },
        "docusign_user": {
          "type": "string"
        },
        "domain": {
          "type": "string"
        },
        "ein": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "enroll_charge": {
          "type": "number"
        },
        "esign": {
          "type": "integer"
        },
        "fax": {
          "type": "string"
        },
        "gcs_account_num": {
          "type": "string"
        },
        "gcs_policy_group_id": {
          "type": "string"
        },
        "logo_url": {
          "type": "string"
        },
        "name": {
          "type": "integer"
        },
        "parent_id": {
          "type": "integer"
        },
        "phone": {
          "type": "string"
        },
        "phone2": {
          "type": "string"
        },
        "routing_num": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "theme": {
          "type": "string"
        },
        "timezone": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Address": {
      "description": "address record",
      "properties": {
        "address1": {
          "type": "string"
        },
        "address2": {
          "type": "string"
        },
        "address3": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "zip": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Contact": {
      "properties": {
        "client_id": {
          "type": "integer",
          "readOnly": "true"
        },
        "acctID": {
          "type": "integer",
          "readOnly": "true"
        },
        "company_id": {
          "type": "integer",
          "readOnly": "true"
        },
        "file_type": {
          "type": "integer"
        },
        "form_id": {
          "type": "integer"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "readOnly": "true"
        },
        "created_by": {
          "type": "integer",
          "readOnly": "true"
        },
        "assigned_to": {
          "type": "integer"
        },
        "campaign_id": {
          "type": "integer"
        },
        "attorney": {
          "type": "integer"
        },
        "attorney_id": {
          "type": "integer"
        },
        "attorney_id2": {
          "type": "integer"
        },
        "first_name": {
          "type": "string"
        },
        "middle_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "salutation": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "phone_number": {
          "type": "string"
        },
        "phone_extension": {
          "type": "string"
        },
        "cell_phone": {
          "type": "string"
        },
        "cell_extension": {
          "type": "string"
        },
        "work_phone": {
          "type": "string"
        },
        "work_extension": {
          "type": "string"
        },
        "address": {
          "$ref": "#/definitions/Address"
        },
        "email": {
          "type": "string"
        },
        "social_security_number": {
          "type": "string"
        },
        "date_of_birth": {
          "type": "string",
          "format": "date",
          "example": "2021-06-28"
        },
        "language": {
          "type": "integer"
        },
        "submitted": {
          "type": "integer"
        },
        "submitted_by": {
          "type": "integer"
        },
        "submitted_at": {
          "type": "string",
          "format": "date-time"
        },
        "approved_by2": {
          "type": "integer"
        },
        "approved_date2": {
          "type": "string",
          "format": "date",
          "example": "2021-06-28"
        },
        "rejected_by": {
          "type": "integer"
        },
        "rejected_notes": {
          "type": "string"
        },
        "paused_notes": {
          "type": "string"
        },
        "dropped_reason": {
          "type": "integer"
        },
        "grad_date": {
          "type": "string",
          "format": "date",
          "example": "2021-06-28"
        },
        "total_debt": {
          "type": "number"
        },
        "welcome_sent": {
          "type": "string",
          "format": "date-time"
        },
        "paper_statements": {
          "type": "integer"
        },
        "paper_welcome": {
          "type": "integer"
        },
        "gateway_id": {
          "type": "integer"
        },
        "gateway_approved_by": {
          "type": "integer"
        },
        "gateway_hold": {
          "type": "integer"
        },
        "gateway_hold_reason": {
          "type": "integer"
        },
        "gateway_hold_notes": {
          "type": "string"
        },
        "gateway_auth_received": {
          "type": "integer"
        },
        "gateway_auth_file": {
          "type": "string"
        },
        "iscoapp": {
          "type": "integer"
        },
        "customs": {
          "type": "array",
          "items": {
            "properties": {
              "field_id": {
                "type": "integer"
              },
              "value": {
                "type": "string"
              },
              "label": {
                "type": "string"
              }
            }
          }
        }
      },
      "type": "object"
    },
    "Creditor": {
      "description": "crediror record",
      "properties": {
        "creditor_id": {
          "type": "integer"
        },
        "acctID": {
          "type": "integer"
        },
        "tp_id": {
          "type": "integer"
        },
        "is_active": {
          "type": "integer"
        },
        "company_name": {
          "type": "string"
        },
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "address": {
          "$ref": "#/definitions/Address"
        },
        "phone": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Note": {
      "description": "note record",
      "properties": {
        "content": {
          "type": "string"
        },
        "note_created_date": {
          "type": "string"
        },
        "note_id": {
          "type": "integer"
        },
        "note_type": {
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "DebtQueue": {
      "description": "DebtQueues record",
      "properties": {
        "queue_id": {
          "type": "integer"
        },
        "company_id": {
          "type": "integer"
        },
        "queue_name": {
          "type": "string"
        },
        "created_by": {
          "$ref": "#/definitions/User"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "active": {
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Debt": {
      "properties": {
        "debt_id": {
          "type": "integer",
          "readOnly": "true"
        },
        "acctID": {
          "type": "integer",
          "readOnly": "true"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "readOnly": "true"
        },
        "created_by": {
          "type": "integer",
          "readOnly": "true"
        },
        "modified_at": {
          "type": "string",
          "format": "date-time",
          "readOnly": "true"
        },
        "modified_by": {
          "type": "integer",
          "readOnly": "true"
        },
        "original_debt_amount": {
          "type": "number"
        },
        "current_debt_amount": {
          "type": "number"
        },
        "current_payment": {
          "type": "number"
        },
        "current_rate": {
          "type": "number"
        },
        "notes": {
          "type": "string"
        },
        "verified_debt_amount": {
          "type": "number"
        },
        "creditor": {
          "required": "true",
          "$ref": "#/definitions/Creditor"
        },
        "debt_buyer": {
          "type": "string"
        },
        "poa_sent_date": {
          "type": "string",
          "format": "date",
          "example": "2021-06-28"
        },
        "legal_account": {
          "type": "string"
        },
        "last_payment_date": {
          "type": "string",
          "format": "date",
          "example": "2021-06-28"
        },
        "last_payment_amount": {
          "type": "number"
        },
        "opened_date": {
          "type": "string",
          "format": "date",
          "example": "2021-06-28"
        },
        "available_balance": {
          "type": "number"
        },
        "enrolled": {
          "type": "integer"
        },
        "enrolled_date": {
          "type": "string",
          "format": "date",
          "example": "2021-06-28"
        },
        "debt_type": {
          "type": "integer"
        },
        "debt_status": {
          "type": "string"
        },
        "locked": {
          "type": "integer"
        },
        "og_account_num": {
          "type": "string"
        },
        "creditor_account_num": {
          "type": "string"
        },
        "settled": {
          "type": "integer"
        },
        "settlement_id": {
          "type": "integer"
        },
        "client_id": {
          "required": "true",
          "type": "integer"
        },
        "settlement_offers": {
          "type": "array"
        },
        "customs": {
          "type": "array"
        }
      },
      "type": "object"
    },
    "Docs": {
      "description": "docs data",
      "properties": {
        "clixsign": {
          "type": "array"
        },
        "esigns": {
          "type": "array"
        },
        "docusign": {
          "type": "array"
        },
        "uploads": {
          "type": "array"
        },
        "generated": {
          "type": "array"
        }
      },
      "type": "object"
    },
    "Document": {
      "description": "Document data",
      "properties": {
        "id": {
          "type": "integer"
        },
        "file_types": {
          "$ref": "#/definitions/FileTypes"
        },
        "states": {
          "type": "array"
        },
        "title": {
          "type": "string"
        },
        "doc_type": {
          "type": "string"
        },
        "category": {
          "type": "string"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        }
      },
      "type": "object"
    },
    "FileTypes": {
      "description": "Document data",
      "properties": {
        "General / Not Defined": {
          "type": "string"
        },
        "Software": {
          "type": "string"
        },
        "Success": {
          "type": "string"
        },
        "Debt Settlement": {
          "type": "string"
        },
        "Student Loans": {
          "type": "string"
        },
        "Business Loans": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Package": {
      "description": "Package data",
      "properties": {
        "id": {
          "type": "integer"
        },
        "file_types": {
          "$ref": "#/definitions/FileTypes"
        },
        "states": {
          "type": "array"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "contents": {
          "type": "array"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "created_by": {
          "type": "integer"
        },
        "modified_at": {
          "type": "string",
          "format": "date-time"
        },
        "modified_by": {
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Template": {
      "description": "template record",
      "properties": {
        "name": {
          "type": "string"
        },
        "folder": {
          "type": "string"
        },
        "file": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Ecampaign": {
      "description": "Ecampaign record",
      "properties": {
        "id": {
          "type": "integer"
        },
        "acctID": {
          "type": "integer"
        },
        "created_by": {
          "type": "integer"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "modified_by": {
          "type": "integer"
        },
        "modified_at": {
          "type": "string",
          "format": "date-time"
        },
        "category_id": {
          "type": "integer"
        },
        "title": {
          "type": "string"
        },
        "subject": {
          "type": "string"
        },
        "body": {
          "type": "string"
        },
        "plainbody": {
          "type": "string"
        },
        "public": {
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Loan": {
      "properties": {
        "acctID": {
          "type": "integer",
          "readOnly": "true"
        },
        "ach_on": {
          "type": "integer"
        },
        "ach_start_date": {
          "type": "string",
          "format": "date",
          "example": "2021-06-28"
        },
        "advance_date": {
          "type": "string",
          "format": "date",
          "example": "2021-06-28"
        },
        "advance_type": {
          "type": "string",
          "example": "ACH"
        },
        "client_id": {
          "required": "true",
          "type": "integer"
        },
        "conf_num": {
          "type": "string"
        },
        "contract_date": {
          "type": "string",
          "format": "date",
          "example": "2021-06-28"
        },
        "contract_number": {
          "type": "string",
          "example": "265595"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "readOnly": "true"
        },
        "created_by": {
          "type": "integer",
          "readOnly": "true"
        },
        "defaulted_date": {
          "type": "string",
          "format": "date",
          "example": "2021-06-28"
        },
        "fees": {
          "type": "number"
        },
        "freq_int": {
          "type": "string"
        },
        "frequency": {
          "type": "string",
          "example": "WD"
        },
        "funded": {
          "type": "integer"
        },
        "holdback_percent": {
          "type": "number"
        },
        "lien_pos": {
          "type": "integer"
        },
        "loan_amount": {
          "type": "number"
        },
        "loan_class": {
          "type": "integer"
        },
        "loan_id": {
          "type": "integer",
          "readOnly": "true"
        },
        "modified_at": {
          "type": "string",
          "format": "date-time",
          "readOnly": "true"
        },
        "modified_by": {
          "type": "integer",
          "readOnly": "true"
        },
        "offer_set": {
          "type": "integer"
        },
        "paid_in_full_date": {
          "type": "string",
          "format": "date",
          "example": "2021-06-28"
        },
        "payback_amount": {
          "type": "number"
        },
        "payback_period": {
          "type": "integer"
        },
        "payment": {
          "type": "number"
        },
        "period_amount": {
          "type": "number"
        },
        "pricing_lock": {
          "type": "integer"
        },
        "program_id": {
          "type": "integer"
        },
        "rate": {
          "type": "number",
          "example": 1.33
        },
        "status": {
          "type": "integer",
          "example": 13
        },
        "tp_id": {
          "type": "integer"
        },
        "type_id": {
          "type": "integer",
          "example": 7
        },
        "underwriter_notes": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "LoanOffer": {
      "description": "Loan offer record",
      "properties": {
        "id": {
          "type": "integer"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "created_by": {
          "type": "integer"
        },
        "status_id": {
          "type": "integer"
        },
        "loan_amount": {
          "type": "number"
        },
        "rate": {
          "type": "number"
        },
        "apr": {
          "type": "integer"
        },
        "term": {
          "type": "number"
        },
        "payment_amt": {
          "type": "number"
        },
        "payback_amt": {
          "type": "number"
        },
        "frequency": {
          "type": "integer"
        },
        "active": {
          "type": "integer"
        },
        "type": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "term_unit": {
          "type": "string"
        },
        "amortization": {
          "type": "number"
        },
        "amortization_unit": {
          "type": "string"
        },
        "amortization_method": {
          "type": "string"
        },
        "compounding": {
          "type": "string"
        },
        "initial_date": {
          "type": "string",
          "format": "date",
          "example": "2021-06-28"
        },
        "first_payment_date": {
          "type": "string",
          "format": "date",
          "example": "2021-06-28"
        },
        "last_payment_date": {
          "type": "string",
          "format": "date",
          "example": "2021-06-28"
        },
        "increment_type": {
          "type": "string"
        },
        "increment_value": {
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Settlementoffer": {
      "properties": {
        "offer_id": {
          "type": "integer",
          "readOnly": "true"
        },
        "contact_id": {
          "type": "integer"
        },
        "creditor": {
          "required": "true",
          "$ref": "#/definitions/Creditor"
        },
        "debt_id": {
          "type": "integer"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "readOnly": "true"
        },
        "created_by": {
          "type": "integer",
          "readOnly": "true"
        },
        "modified_at": {
          "type": "string",
          "format": "date-time",
          "readOnly": "true"
        },
        "modified_by": {
          "type": "integer",
          "readOnly": "true"
        },
        "neg_id": {
          "type": "integer"
        },
        "madeby": {
          "type": "string",
          "example": "Negotiator"
        },
        "offer_status": {
          "type": "object",
          "example": 3
        },
        "status_id": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "offer_status_date": {
          "type": "string",
          "format": "date",
          "example": "2021-06-28"
        },
        "offer_valid_date": {
          "type": "string",
          "format": "date",
          "example": "2021-06-28"
        },
        "settlement_type": {
          "type": "integer"
        },
        "debt_amount": {
          "type": "number"
        },
        "settlement_amount": {
          "type": "number"
        },
        "settlement_fee": {
          "type": "number"
        },
        "notes": {
          "type": "string"
        },
        "cred_cont_id": {
          "type": "integer"
        },
        "json": {
          "type": "object"
        }
      },
      "type": "object"
    },
    "Task": {
      "properties": {
        "acctID": {
          "type": "integer",
          "readOnly": "true"
        },
        "task_id": {
          "type": "integer",
          "readOnly": "true"
        },
        "contact_id": {
          "required": "true",
          "type": "integer",
          "example": 93946181
        },
        "task_created_date": {
          "type": "string",
          "format": "date-time",
          "readOnly": "true"
        },
        "task_name": {
          "required": "true",
          "type": "string",
          "example": "new task"
        },
        "defined_task": {
          "type": "integer",
          "example": 15522
        },
        "created_by": {
          "type": "integer",
          "readOnly": "true"
        },
        "task_due_date": {
          "required": "true",
          "type": "string",
          "format": "date",
          "example": "2021-06-28"
        },
        "task_note": {
          "type": "string"
        },
        "list_id": {
          "required": "true",
          "type": "integer"
        },
        "team_id": {
          "type": "integer"
        },
        "task_completed": {
          "type": "integer",
          "readOnly": "true",
          "example": 30
        },
        "task_completed_by": {
          "type": "integer",
          "readOnly": "true"
        },
        "task_completed_date": {
          "type": "string",
          "format": "date-time",
          "readOnly": "true"
        },
        "task_completion_percentage": {
          "type": "integer"
        },
        "task_status": {
          "type": "integer"
        },
        "title": {
          "type": "string"
        },
        "assigned_to_id": {
          "type": "integer"
        },
        "task_type": {
          "type": "integer"
        },
        "assigned_to": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "TaskItem": {
      "properties": {
        "task_category": {
          "type": "integer"
        },
        "items": {
          "type": "array",
          "items": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "title": {
                "type": "string"
              }
            }
          }
        }
      },
      "type": "object"
    },
    "Team": {
      "properties": {
        "team_id": {
          "type": "integer",
          "readOnly": "true"
        },
        "acctID": {
          "type": "integer",
          "readOnly": "true"
        },
        "company_id": {
          "type": "integer",
          "readOnly": "true"
        },
        "name": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "User": {
      "properties": {
        "acctID": {
          "type": "integer",
          "readOnly": "true"
        },
        "active": {
          "type": "integer"
        },
        "attorney": {
          "type": "integer"
        },
        "billable": {
          "type": "integer"
        },
        "company": {
          "type": "string"
        },
        "company_id": {
          "type": "integer",
          "readOnly": "true"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "readOnly": "true"
        },
        "del": {
          "type": "integer",
          "readOnly": "true"
        },
        "delTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": "true"
        },
        "email": {
          "type": "string",
          "example": "mail@debtpaypro.com"
        },
        "firstname": {
          "type": "string"
        },
        "guid": {
          "type": "string"
        },
        "lastname": {
          "type": "string"
        },
        "master": {
          "type": "integer"
        },
        "parent_id": {
          "type": "integer"
        },
        "pass_reset": {
          "type": "integer"
        },
        "payee_id": {
          "type": "integer"
        },
        "role": {
          "type": "integer"
        },
        "user_id": {
          "type": "integer",
          "readOnly": "true"
        },
        "user_name": {
          "type": "string"
        },
        "user_type": {
          "type": "integer"
        }
      },
      "type": "object"
    }
  },
  "parameters": {
    "body": {
      "name": "body",
      "in": "body",
      "description": "Contact object",
      "required": true,
      "schema": {
        "properties": {
          "contact_id": {
            "description": "generate document Package\n\nSWG\\Post(\npath=\"/package\", tags={\"Packages\"},\nconsumes={\"application/json\"},",
            "type": "integer"
          }
        },
        "type": "object"
      }
    },
    "campaign_id": {
      "name": "campaign_id",
      "in": "path",
      "description": "Id of SMS campaign to be returned",
      "required": true,
      "type": "integer"
    }
  },
  "responses": {
    "default": {
      "description": "default",
      "schema": {
        "properties": {
          "status": {
            "type": "object",
            "$ref": "#/definitions/Status"
          },
          "response": {
            "type": "object"
          }
        },
        "type": "object"
      }
    },
    "create": {
      "description": "after creation",
      "schema": {
        "properties": {
          "status": {
            "type": "object",
            "$ref": "#/definitions/Status"
          },
          "response": {
            "properties": {
              "id": {
                "type": "integer",
                "example": "123"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      }
    },
    "error": {
      "description": "some error",
      "schema": {
        "properties": {
          "status": {
            "properties": {
              "code": {
                "type": "integer",
                "example": "404"
              },
              "message": {
                "type": "string",
                "example": "not found"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      }
    },
    "success": {
      "description": "after creation",
      "schema": {
        "properties": {
          "status": {
            "type": "object",
            "$ref": "#/definitions/Status"
          },
          "response": {
            "properties": {
              "id": {
                "type": "integer",
                "example": "123"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      }
    },
    "ErrorResponse": {
      "description": "Error Response",
      "schema": {
        "required": ["status"],
        "properties": {
          "status": {
            "type": "object",
            "$ref": "#/definitions/Status"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "Api-Key": {
      "type": "apiKey",
      "name": "Api-Key",
      "in": "header"
    }
  },
  "security": [
    {
      "Api-Key": []
    }
  ],
  "tags": [
    {
      "name": "Calls",
      "description": "all actions with calls"
    },
    {
      "name": "Contacts",
      "description": "all actions with contacts"
    }
  ]
}
